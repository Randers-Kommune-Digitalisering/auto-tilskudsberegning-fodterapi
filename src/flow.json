[
    {
        "id": "8ea344595d9a442a",
        "type": "tab",
        "label": "Main",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "52e57c24c4e5e6b5",
        "type": "subflow",
        "name": "Initialize",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "7ed2b57784df83a6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1020,
                "y": 280,
                "wires": [
                    {
                        "id": "b7ca7ab7a8a4c856",
                        "port": 0
                    },
                    {
                        "id": "6393aeac31d219d3",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "0a23c0643b4fdb38",
        "type": "subflow",
        "name": "ExtractReceipts",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "22f6127396c4be21"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1260,
                "y": 320,
                "wires": [
                    {
                        "id": "51597275075585ef",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1300,
            "y": 80,
            "wires": [
                {
                    "id": "7a24cc16abfbc6ff",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "981390739fa10d48",
        "type": "subflow",
        "name": "ExtractKP",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "63994549a48bdba2"
                    },
                    {
                        "id": "08e6886e143a313f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1340,
                "y": 200,
                "wires": [
                    {
                        "id": "9c897aef15b24d1a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99",
        "status": {
            "x": 1660,
            "y": 60,
            "wires": [
                {
                    "id": "9b3dd6f36db12512",
                    "port": 0
                }
            ]
        }
    },
    {
        "id": "57c40cb841470eb3",
        "type": "subflow",
        "name": "Transform",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "93a599675881a13b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 80,
                "wires": []
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "3a3b104b02c5ccd9",
        "type": "subflow",
        "name": "Load",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "57300174d1783ae5"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "41d1b8798efe7e15",
        "type": "subflow",
        "name": "PupController",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 440,
                "wires": [
                    {
                        "id": "5aa16189aff2b4c3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1720,
                "y": 340,
                "wires": [
                    {
                        "id": "cb4ea3ccf7541c86",
                        "port": 1
                    }
                ]
            },
            {
                "x": 1920,
                "y": 440,
                "wires": [
                    {
                        "id": "5935cece6c345653",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "a2ca546c7120f663",
        "type": "group",
        "z": "8ea344595d9a442a",
        "name": "",
        "style": {
            "fill": "#ffdf7f",
            "label": true,
            "label-position": "s",
            "color": "#3f3f3f"
        },
        "nodes": [
            "9927022caf586464",
            "6e87ed6cbf1a2272",
            "78cdf00662432aa3"
        ],
        "x": 514,
        "y": 159,
        "w": 612,
        "h": 82
    },
    {
        "id": "4689d5530a08a735",
        "type": "group",
        "z": "8ea344595d9a442a",
        "name": "",
        "style": {
            "fill": "#addb7b",
            "label": true
        },
        "nodes": [
            "27f71b6540b6e2d8"
        ],
        "x": 1174,
        "y": 159,
        "w": 172,
        "h": 82
    },
    {
        "id": "becf3086d0307883",
        "type": "junction",
        "z": "8ea344595d9a442a",
        "x": 340,
        "y": 460,
        "wires": [
            [
                "e9617e47af67aef2"
            ]
        ]
    },
    {
        "id": "a567f42879c1f449",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "6e63b3c396c75d87",
        "type": "websocket-listener",
        "path": "/ws/pup",
        "wholemsg": "true"
    },
    {
        "id": "43ca9917319c367b",
        "type": "websocket-listener",
        "path": "/ws/worklet",
        "wholemsg": "false"
    },
    {
        "id": "d171e77e6e654fb0",
        "type": "change",
        "z": "52e57c24c4e5e6b5",
        "name": "Set LastRunDate = todaysDate",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::lastRunDate",
                "pt": "global",
                "to": "todaysDate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "global",
                "to": "",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1390,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "83b7e1a2f8e86ebd",
        "type": "comment",
        "z": "52e57c24c4e5e6b5",
        "name": "Sæt dato for seneste kørsel + ny status",
        "info": "",
        "x": 1410,
        "y": 120,
        "wires": []
    },
    {
        "id": "7ed2b57784df83a6",
        "type": "credentials",
        "z": "52e57c24c4e5e6b5",
        "name": "",
        "props": [
            {
                "value": "workletUser",
                "type": "msg"
            },
            {
                "value": "workletPass",
                "type": "msg"
            }
        ],
        "x": 230,
        "y": 140,
        "wires": [
            [
                "7c9aa85204e28385"
            ]
        ]
    },
    {
        "id": "bfc4ed61eaa71e49",
        "type": "debug",
        "z": "52e57c24c4e5e6b5",
        "name": "MSG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 340,
        "wires": []
    },
    {
        "id": "7c9aa85204e28385",
        "type": "change",
        "z": "52e57c24c4e5e6b5",
        "name": "Definér tilskudsperioder",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\t      \"periode_fra\": \"2022-10-01\",\t      \"periode_til\": \"2023-04-01\",\t      \"satser\": [\t        {\t          \"tilskud_maxdkk\": 24,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Journaloptagelse\"\t        },\t        {\t          \"tilskud_maxdkk\": 24,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Kontrol og/eller eftersyn\"\t        },\t        {\t          \"tilskud_maxdkk\": 111,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Behandlingsydelse C\"\t        },\t        {\t          \"tilskud_maxdkk\": 81,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Første fodstatus (nyhenvist patient)\"\t        },\t        {\t          \"tilskud_maxdkk\": 66,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Fodstatus\"\t        },\t        {\t          \"tilskud_maxdkk\": 55,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Fodstatus ved samtidig anden behandling\"\t        },\t        {\t          \"tilskud_maxdkk\": 25,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Opdatering af fodstatus ved skift i risikogruppe\"\t        },\t        {\t          \"tilskud_maxdkk\": 66,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Behandlingsydelse A\"\t        },\t        {\t          \"tilskud_maxdkk\": 100,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Behandlingsydelse B\"\t        },\t        {\t          \"tilskud_maxdkk\": 200,\t          \"tilskud_procent\": 50,\t          \"titel\": \"Indlæg - type 1, enkelt\"\t        },\t        {\t          \"tilskud_maxdkk\": 400,\t          \"tilskud_procent\": 50,\t          \"titel\": \"Indlæg - type 1, par\"\t        },\t        {\t          \"tilskud_maxdkk\": 200,\t          \"tilskud_procent\": 50,\t          \"titel\": \"Indlæg - type 2, enkelt\"\t        },\t        {\t          \"tilskud_maxdkk\": 400,\t          \"tilskud_procent\": 50,\t          \"titel\": \"Indlæg - type 2, par\"\t        },\t        {\t          \"tilskud_maxdkk\": 200,\t          \"tilskud_procent\": 50,\t          \"titel\": \"Indlæg - type 3, enkelt\"\t        },\t        {\t          \"tilskud_maxdkk\": 400,\t          \"tilskud_procent\": 50,\t          \"titel\": \"Indlæg - type 3, par\"\t        },\t        {\t          \"tilskud_maxdkk\": 125,\t          \"tilskud_procent\": 50,\t          \"titel\": \"Tilretning af indlæg\"\t        },\t        {\t          \"tilskud_maxdkk\": 24,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Behandling før påsætning af 1 ny bøjle\"\t        },\t        {\t          \"tilskud_maxdkk\": 72,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Fremstilling og påsætning af 1 ny bøjle\"\t        },\t        {\t          \"tilskud_maxdkk\": 48,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Fremstilling og påsætning af bøjler udover 1\"\t        },\t        {\t          \"tilskud_maxdkk\": 48,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Korrektion af 1 bøjle\"\t        },\t        {\t          \"tilskud_maxdkk\": 72,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Korrektion af 2 bøjle\"\t        },\t        {\t          \"tilskud_maxdkk\": 96,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Korrektion af op til 10 bøjler incl.\"\t        },\t        {\t          \"tilskud_maxdkk\": 48,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Ortheser\"\t        },\t        {\t          \"tilskud_maxdkk\": 48,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Ortheser fremstilet af sislicone\"\t        },\t        {\t          \"tilskud_maxdkk\": 55,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Sårbehandling\"\t        },\t        {\t          \"tilskud_maxdkk\": 44,\t          \"tilskud_procent\": 80,\t          \"titel\": \"Sårbehandling ved anden samtidig behandling\"\t        },\t        {\t          \"tilskud_maxdkk\": 100,\t          \"tilskud_procent\": 50,\t          \"titel\": \"Behandling uden tilskud\"\t        },\t        {\t          \"tilskud_maxdkk\": 0,\t          \"tilskud_procent\": 0,\t          \"titel\": \"Afstandstillæg uden tilskud\"\t        }\t      ]\t    }",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "b9b4c969bbb10e63"
            ]
        ]
    },
    {
        "id": "b9b4c969bbb10e63",
        "type": "change",
        "z": "52e57c24c4e5e6b5",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "tilskudsInfo",
                "pt": "msg",
                "to": "{\t    \"formuegraense\": 93000,\t    \"max_hjemmebehandling\": 280,\t    \"max_udekoersel\": 300,\t    \"danmark_fratraek_procent\": 50,\t    \"danmark_fratraek_maxdkk\": 100,\t    \"tilskudsperioder\": payload\t}",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 615,
        "y": 140,
        "wires": [
            [
                "6393aeac31d219d3",
                "6487729ce5e9ea9b"
            ]
        ],
        "l": false
    },
    {
        "id": "3349642b5f24af40",
        "type": "comment",
        "z": "52e57c24c4e5e6b5",
        "name": "Sæt tilskudsinfo",
        "info": "",
        "x": 440,
        "y": 100,
        "wires": []
    },
    {
        "id": "6487729ce5e9ea9b",
        "type": "change",
        "z": "52e57c24c4e5e6b5",
        "d": true,
        "name": "Hent datoer",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "payload.lastRunDate",
                "pt": "msg",
                "to": "#:(storeInFile)::lastRunDate",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.lastRunStartDate",
                "pt": "msg",
                "to": "#:(storeInFile)::lastRunStartDate",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 230,
        "y": 280,
        "wires": [
            [
                "52ebe83debd3a111"
            ]
        ]
    },
    {
        "id": "431a8a5cc40f034b",
        "type": "comment",
        "z": "52e57c24c4e5e6b5",
        "name": "Hent data for seneste kørsel",
        "info": "",
        "x": 280,
        "y": 240,
        "wires": []
    },
    {
        "id": "6d2a6ef190291342",
        "type": "change",
        "z": "52e57c24c4e5e6b5",
        "name": "Formatér dato",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$|\t{\t    \t    \"startDate\":\t        lastRunSuccess ? \t            lastRunDate\t            ~> $toMillis()\t            ~> $fromMillis('[D01]/[M01]/[Y0001]')\t        : \t            lastRunStartDate,\t\t    \"endDate\":\t        (( $now()\t        ~> $toMillis() )\t            - 86400000 )\t        ~> $fromMillis('[D01]/[M01]/[Y0001]')\t}\t|",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "startDate",
                "pt": "msg",
                "to": "payload.startDate",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "endDate",
                "pt": "msg",
                "to": "payload.endDate",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 280,
        "wires": [
            [
                "b7ca7ab7a8a4c856"
            ]
        ]
    },
    {
        "id": "52ebe83debd3a111",
        "type": "change",
        "z": "52e57c24c4e5e6b5",
        "name": "LastRunSuccess?",
        "rules": [
            {
                "t": "set",
                "p": "payload.lastRunStatusCode",
                "pt": "msg",
                "to": "#:(storeInFile)::statusCode",
                "tot": "global"
            },
            {
                "t": "set",
                "p": "payload.lastRunSuccess",
                "pt": "msg",
                "to": "payload.lastRunStatusCode = 0 ? true : false",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 345,
        "y": 280,
        "wires": [
            [
                "6d2a6ef190291342"
            ]
        ],
        "l": false
    },
    {
        "id": "b7ca7ab7a8a4c856",
        "type": "function",
        "z": "52e57c24c4e5e6b5",
        "name": "Skab filnavn",
        "func": "const splitStartDate = msg.startDate.split(\"/\");\nconst splitEndDate = msg.endDate.split(\"/\");\n\nvar startDate = new Date(splitStartDate[2], splitStartDate[1] - 1, splitStartDate[0]);\nvar endDate = new Date(splitEndDate[2], splitEndDate[1] - 1, splitEndDate[0]);\n\n// skab filnavn\nvar fileName = \"Kvitteringer-\" + startDate.toDateString().replace(splitStartDate[2], \"\").trimEnd()\n    + \"-\" + endDate.toDateString().replace(endDate.getFullYear().toString(), \"\").trimEnd();\n    \nfileName += \".json\";\n\nmsg.fileName = fileName;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 280,
        "wires": [
            [
                "eb8764b4c567e7e1",
                "bfc4ed61eaa71e49"
            ]
        ]
    },
    {
        "id": "12c31dcbbfe025da",
        "type": "comment",
        "z": "52e57c24c4e5e6b5",
        "name": "Skab datoer for ny kørsel",
        "info": "",
        "x": 570,
        "y": 240,
        "wires": []
    },
    {
        "id": "eb8764b4c567e7e1",
        "type": "function",
        "z": "52e57c24c4e5e6b5",
        "name": "Update Status",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"Datoer initialiseret\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "6393aeac31d219d3",
        "type": "change",
        "z": "52e57c24c4e5e6b5",
        "name": "TEST DATA",
        "rules": [
            {
                "t": "set",
                "p": "fileName",
                "pt": "msg",
                "to": "Kvitteringer-Thu Nov 17-Sun Nov 20.json",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "startDate",
                "pt": "msg",
                "to": "17/11/2022",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "endDate",
                "pt": "msg",
                "to": "20/11/2022",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 180,
        "wires": [
            [
                "bfc4ed61eaa71e49"
            ]
        ]
    },
    {
        "id": "37d8375960af0376",
        "type": "comment",
        "z": "52e57c24c4e5e6b5",
        "name": "Skab JSON filnavn",
        "info": "",
        "x": 810,
        "y": 240,
        "wires": []
    },
    {
        "id": "3380ac67751fbb1b",
        "type": "function",
        "z": "0a23c0643b4fdb38",
        "name": "Download receipts",
        "func": "const puppeteer = global.get('puppeteer');\nconst path = global.get('path');\nconst downloadPath = path.resolve('./download');\n\nasync function downloadJSON()\n{\n    var browser;\n    var page;\n    var client;\n\n    try\n    {\n        browser = await puppeteer.launch({\n            headless: false,\n            slowMo: 50,\n            ignoreHTTPSErrors: true\n        });\n    } catch (e)\n    {\n        //this.status({ fill: \"red\", shape: \"ring\", text: \"Fejl! Kunne ikke åbne browseren: \" + e });\n        this.error(e);\n    } \n\n    node.status({fill:\"yellow\",shape:\"ring\",text:\"Åbner browser\"});\n\n    try\n    {\n        page = await browser.newPage();\n        await page.goto\n            (\n                msg.selectors.worklet.url,\n                { waitUntil: 'networkidle2' }\n            );\n    } catch (e)\n    {\n        //this.status({ fill: \"red\", shape: \"ring\", text: \"Fejl! Kunne ikke gå til WorkLet webinterface: \" + e });\n        this.error(e);\n    } \n\n    node.status({ fill: \"yellow\", shape: \"ring\", text: \"Logger ind på WorkLet\" });\n\n    try\n    {\n        client = await page.target().createCDPSession();\n        await client.send('Page.setDownloadBehavior', {\n            behavior: 'allow',\n            downloadPath: downloadPath\n        });\n    } catch (e)\n    {\n        //this.status({ fill: \"red\", shape: \"ring\", text: \"Fejl! Kunne sætte download-opførsel: \" + e });\n        this.error(e);\n    } \n\n    try\n    {\n        await page.type(msg.selectors.worklet.loginUser, msg.workletUser);\n        await page.type(msg.selectors.worklet.loginPass, msg.workletPass);\n        await page.click(msg.selectors.worklet.loginButton);\n    } catch (e)\n    {\n        //this.status({ fill: \"red\", shape: \"ring\", text: \"Fejl! Kunne ikke logge ind på WorkLet: \" + e });\n        this.error(e);\n    } \n\n    node.status({ fill: \"yellow\", shape: \"ring\", text: \"Vælger datorække\" });\n\n    try\n    {\n        await page.waitForSelector(msg.selectors.worklet.datePickerFrom)\n        await page.click(msg.selectors.worklet.datePickerFrom, { clickCount: 3 })\n        await page.type(msg.selectors.worklet.datePickerActive, msg.startDate);\n\n        await page.click(\"h1\");\n\n        await page.waitForSelector(msg.selectors.worklet.datePickerTo)\n        await page.click(msg.selectors.worklet.datePickerTo, { clickCount: 3 })\n        await page.type(msg.selectors.worklet.datePickerActive, msg.endDate);\n    } catch (e)\n    {\n        //this.status({ fill: \"red\", shape: \"ring\", text: \"Fejl! Kunne ikke vælge datorække: \" + e });\n        this.error(e);\n    } \n\n    node.status({ fill: \"yellow\", shape: \"ring\", text: \"Downloader JSON\" });\n\n    try\n    {\n\n        await page.click(msg.selectors.worklet.header);\n        await page.click(msg.selectors.worklet.downloadButton);\n        await page.waitForNetworkIdle();\n    } catch (e)\n    {\n        //this.status({ fill: \"red\", shape: \"ring\", text: \"Fejl! Kunne downloade JSON: \" + e });\n        this.error(e);\n    } \n\n    node.status({ fill: \"yellow\", shape: \"dot\", text: \"JSON downloaded\" });\n\n    try\n    {\n        await browser.close();\n    } catch (e)\n    {\n        //this.status({ fill: \"red\", shape: \"ring\", text: \"Fejl! Kunne lukke browseren: \" + e });\n        this.error(e);\n    } \n\n    await node.send(msg);\n    \n}\n\ndownloadJSON();",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1190,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "22f6127396c4be21",
        "type": "function",
        "z": "0a23c0643b4fdb38",
        "name": "Check for file",
        "func": "const fs = global.get('fs');\nconst path = global.get('path');\nconst downloadPath = path.resolve('./download');\nmsg.filePath = downloadPath + \"\\\\\" + msg.fileName;\n\nif (fs.existsSync(msg.filePath))\n{\n    msg.payload = 1;\n    node.status({ fill: \"green\", shape: \"dot\", text: \"JSON findes allerede\" });\n}\nelse\n{\n    msg.payload = 0;\n    node.status({ fill: \"yellow\", shape: \"dot\", text: \"JSON findes ikke\" });\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 100,
        "wires": [
            [
                "49acbc7936917f02"
            ]
        ]
    },
    {
        "id": "49acbc7936917f02",
        "type": "switch",
        "z": "0a23c0643b4fdb38",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 100,
        "wires": [
            [
                "54044df29e6b7e40",
                "2e4c7732adb27bae"
            ],
            [
                "f64c0719facd74ed"
            ]
        ]
    },
    {
        "id": "7a24cc16abfbc6ff",
        "type": "status",
        "z": "0a23c0643b4fdb38",
        "name": "",
        "scope": [
            "22f6127396c4be21",
            "6ad5a320fe5e84e4",
            "9293fdb03385380d"
        ],
        "x": 1160,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "f64c0719facd74ed",
        "type": "file in",
        "z": "0a23c0643b4fdb38",
        "name": "Get JSON",
        "filename": "filePath",
        "filenameType": "msg",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": false,
        "x": 390,
        "y": 320,
        "wires": [
            [
                "6ad5a320fe5e84e4",
                "4ece2e3ba5cb6fe8"
            ]
        ]
    },
    {
        "id": "4ece2e3ba5cb6fe8",
        "type": "json",
        "z": "0a23c0643b4fdb38",
        "name": "Parse JSON",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 320,
        "wires": [
            [
                "9293fdb03385380d",
                "51597275075585ef"
            ]
        ]
    },
    {
        "id": "9293fdb03385380d",
        "type": "function",
        "z": "0a23c0643b4fdb38",
        "name": "Update Status",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"JSON udpakket\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "6ad5a320fe5e84e4",
        "type": "function",
        "z": "0a23c0643b4fdb38",
        "name": "Update Status",
        "func": "node.status({ fill: \"yellow\", shape: \"circle\", text: \"Behandler JSON\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "59d584537dcd39ef",
        "type": "function",
        "z": "0a23c0643b4fdb38",
        "name": "Delete JSON",
        "func": "const fs = global.get('fs');\nconst path = global.get('path');\nconst downloadPath = path.resolve('./download');\nmsg.filePath = downloadPath + \"\\\\\" + msg.fileName;\n\nfs.unlinkSync(msg.filePath);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "b2127fdad5100f01",
        "type": "comment",
        "z": "0a23c0643b4fdb38",
        "name": "Tjek om filen eksisterer",
        "info": "",
        "x": 260,
        "y": 60,
        "wires": []
    },
    {
        "id": "874f904c82a084de",
        "type": "comment",
        "z": "0a23c0643b4fdb38",
        "name": "Download (Puppeteer)",
        "info": "",
        "x": 920,
        "y": 100,
        "wires": []
    },
    {
        "id": "86eab179e9a3bca3",
        "type": "comment",
        "z": "0a23c0643b4fdb38",
        "name": "Parse JSON",
        "info": "",
        "x": 630,
        "y": 280,
        "wires": []
    },
    {
        "id": "c538df4779ce88db",
        "type": "comment",
        "z": "0a23c0643b4fdb38",
        "name": "Slet JSON",
        "info": "",
        "x": 880,
        "y": 280,
        "wires": []
    },
    {
        "id": "51597275075585ef",
        "type": "change",
        "z": "0a23c0643b4fdb38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "receipts",
                "pt": "msg",
                "to": "payload.kvitteringer",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 320,
        "wires": [
            [
                "fb3168c30c4bf376"
            ]
        ]
    },
    {
        "id": "10176fdee8c71297",
        "type": "comment",
        "z": "0a23c0643b4fdb38",
        "name": "Læs JSON",
        "info": "",
        "x": 380,
        "y": 280,
        "wires": []
    },
    {
        "id": "2c083b213ccf8b67",
        "type": "change",
        "z": "0a23c0643b4fdb38",
        "name": "Set selectors",
        "rules": [
            {
                "t": "set",
                "p": "selectors",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "selectors.worklet",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "selectors.worklet.url",
                "pt": "msg",
                "to": "https://workletnew.snapp.dk/auth/sign-in",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.loginUser",
                "pt": "msg",
                "to": "input[name='username']",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.loginPass",
                "pt": "msg",
                "to": "input[name='password']",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.loginButton",
                "pt": "msg",
                "to": "button",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.datePickerFrom",
                "pt": "msg",
                "to": "[class='react-datepicker__input-container'] > input",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.datePickerActive",
                "pt": "msg",
                "to": "[class='react-datepicker-ignore-onclickoutside']",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.datePickerTo",
                "pt": "msg",
                "to": "div:last-child > [class='react-datepicker__input-container'] > input",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.downloadButton",
                "pt": "msg",
                "to": "button[class='btn btn-primary btn-block primary-color']",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.header",
                "pt": "msg",
                "to": "h1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1170,
        "y": 840,
        "wires": [
            [
                "3380ac67751fbb1b"
            ]
        ]
    },
    {
        "id": "4819ecdbcbc75e24",
        "type": "debug",
        "z": "0a23c0643b4fdb38",
        "name": "debug 7",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 880,
        "y": 240,
        "wires": []
    },
    {
        "id": "54044df29e6b7e40",
        "type": "change",
        "z": "0a23c0643b4fdb38",
        "name": "Set selectors",
        "rules": [
            {
                "t": "set",
                "p": "selectors",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "selectors.worklet",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "selectors.worklet.url",
                "pt": "msg",
                "to": "https://workletnew.snapp.dk/auth/sign-in",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.loginUser",
                "pt": "msg",
                "to": "input[name='username']",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.loginPass",
                "pt": "msg",
                "to": "input[name='password']",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.loginButton",
                "pt": "msg",
                "to": "button",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.datePickerFrom",
                "pt": "msg",
                "to": "[class='react-datepicker__input-container'] > input",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.datePickerActive",
                "pt": "msg",
                "to": "[class='react-datepicker-ignore-onclickoutside']",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.datePickerTo",
                "pt": "msg",
                "to": "div:last-child > [class='react-datepicker__input-container'] > input",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.downloadButton",
                "pt": "msg",
                "to": "button[class='btn btn-primary btn-block primary-color']",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.worklet.header",
                "pt": "msg",
                "to": "h1",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "bf94bfef7921117e"
            ]
        ]
    },
    {
        "id": "b1988e57a1b0a581",
        "type": "function",
        "z": "0a23c0643b4fdb38",
        "name": "PupController",
        "func": "const puppeteer = global.get('puppeteer');\nconst path = global.get('path');\nconst downloadPath = path.resolve('./download');\n\nvar output = [];\n\nasync function executeCommands(commands) {\n    for (let i = 0; i < commands.length; i++) {\n        var action = commands[i].action;\n\n        switch (action) {\n            case \"launch\": await launchChrome(commands[i]);\n                break;\n\n            case \"goto\": await goto(commands[i]);\n                break;\n\n            case \"click\": await clickElement(commands[i]);\n                break;\n\n            case \"type\": await type(commands[i]);\n                break;\n\n            case \"get\": await get(commands[i]);\n                break;\n\n            case \"download\": await download(commands[i]);\n                break;\n\n            case \"setDownloadBehavior\": await setDownloadBehavior(commands[i]);\n                break;\n        }\n\n        msg.pupController.commandsExecuted.push(commands[i]);\n    }\n\n    if (msg.pupController.browser != null)\n        await msg.pupController.browser.close();\n\n    node.status({ fill: \"green\", shape: \"dot\", text: \"Browser automation finished\" });\n\n    msg.pupController.output = output;\n\n    msg.pupController.commands = [];\n\n    msg.pupController.status.isRunning = false;\n\n    await node.send(msg);\n}\n\n// Create status object if it does not exist\nif (msg.pupController.status == null)\n    msg.pupController.status = {};\n\nif (msg.pupController.commandsExecuted == null || typeof msg.pupController.commandsExecuted == undefined)\n    msg.pupController.commandsExecuted = [];\n\nmsg.pupController.status.isRunning = true;\n\n// Run commands from JSON object pupCommands\nawait executeCommands(msg.pupController.commands);\n\n\n// LAUNCH\nasync function launchChrome(command) {\n    msg.pupController.browser = await puppeteer.launch(command.parameters);\n\n    node.status({ fill: \"yellow\", shape: \"ring\", text: \"Launching browser\" });\n\n    return true;\n}\n\n// GOTO\nasync function goto(command) {\n    msg.pupController.page = await msg.pupController.browser.newPage();\n\n    let url = command.url != null ? command.url : command.input;\n\n    node.status({ fill: \"yellow\", shape: \"ring\", text: \"Directing to URL: \" + url });\n    //node.status({ fill: \"yellow\", shape: \"ring\", text: \"Page: \" + page });\n\n    await msg.pupController.page.goto\n        (\n            url,\n            { waitUntil: 'networkidle2' }\n        );\n}\n\n// CLICK\nasync function clickElement(command) {\n    node.status({ fill: \"yellow\", shape: \"ring\", text: \"Clicking on element: \" + command.path });\n\n    await msg.pupController.page.waitForSelector(command.path);\n    await msg.pupController.page.click(command.path, { clickCount: ((command.count != null) ? command.count : 1) });\n}\n\n// TYPE\nasync function type(command) {\n    node.status({ fill: \"yellow\", shape: \"ring\", text: \"Typing '\" + command.input + \"' to element: \" + command.path });\n\n    await msg.pupController.page.waitForSelector(command.path);\n\n    if (command.clear === true)\n        await msg.pupController.page.click(command.path, { clickCount: 3 });\n\n    else\n        await msg.pupController.page.click(command.path);\n\n    await msg.pupController.page.type(command.path, command.input);\n}\n\n// GET\nasync function get(command) {\n    node.status({ fill: \"yellow\", shape: \"ring\", text: \"Getting element: \" + command.path });\n\n    await msg.pupController.page.waitForSelector(command.path);\n\n    const value = await msg.pupController.page.$eval(command.path, el => el.innerHTML);\n\n    var obj = {};\n    obj.name = command.name;\n    obj.value = value;\n\n    output.push(obj);\n}\n\n// DOWNLOAD\nasync function download(command) {\n    if (command.setdownloadbehavior == true)\n        await setDownloadBehavior();\n\n    if (command.path != null)\n        await clickElement(command);\n\n    await msg.pupController.page.waitForNetworkIdle();\n\n}\n\nasync function setDownloadBehavior(command) {\n    msg.pupController.client = await msg.pupController.page.target().createCDPSession();\n    await msg.pupController.client.send('Page.setDownloadBehavior', {\n        behavior: 'allow',\n        downloadPath: downloadPath\n    });\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "bf94bfef7921117e",
        "type": "change",
        "z": "0a23c0643b4fdb38",
        "name": "Set pup commands",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    {\t        \"action\": \"launch\",\t        \"parameters\":\t        {\t            \"headless\": false,\t            \"slowMo\": 50,\t            \"ignoreHTTPSErrors\": true,\t            \"defaultViewport\": null\t        }\t    },\t\t    {\t        \"action\": \"goto\",\t        \"url\": selectors.worklet.url\t    },\t    \t    {\t        \"action\": \"type\",\t        \"path\": selectors.worklet.loginUser,\t        \"input\": workletUser\t    },\t\t    {\t        \"action\": \"type\",\t        \"path\": selectors.worklet.loginPass,\t        \"input\": workletPass\t    },\t    \t    {\t        \"action\": \"click\",\t        \"path\": selectors.worklet.loginButton\t    },\t\t    {\t        \"action\": \"click\",\t        \"path\": selectors.worklet.datePickerFrom\t    },\t\t    {\t        \"action\": \"type\",\t        \"path\": selectors.worklet.datePickerActive,\t        \"input\": startDate,\t        \"clear\": true\t    },\t\t    {\t        \"action\": \"click\",\t        \"path\": selectors.worklet.header\t    },\t\t    {\t        \"action\": \"click\",\t        \"path\": selectors.worklet.datePickerTo\t    },\t\t    {\t        \"action\": \"type\",\t        \"path\": selectors.worklet.datePickerActive,\t        \"input\": endDate,\t        \"clear\": true\t    },\t\t    {\t        \"action\": \"click\",\t        \"path\": selectors.worklet.header\t    },\t\t    {\t        \"action\": \"click\",\t        \"isDownload\": true,\t        \"path\": selectors.worklet.downloadButton\t    },\t    {\t        \"action\": \"close\"\t    }\t    \t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "a05dbb003871b572"
            ]
        ]
    },
    {
        "id": "360b549a7f69e242",
        "type": "comment",
        "z": "0a23c0643b4fdb38",
        "name": "Set selectors + Pup commands",
        "info": "",
        "x": 690,
        "y": 60,
        "wires": []
    },
    {
        "id": "fb3168c30c4bf376",
        "type": "debug",
        "z": "0a23c0643b4fdb38",
        "name": "RECEIPTS",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "receipts",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 360,
        "wires": []
    },
    {
        "id": "a05dbb003871b572",
        "type": "subflow:41d1b8798efe7e15",
        "z": "0a23c0643b4fdb38",
        "name": "",
        "x": 900,
        "y": 140,
        "wires": [
            [
                "f64c0719facd74ed"
            ],
            []
        ]
    },
    {
        "id": "2e4c7732adb27bae",
        "type": "function",
        "z": "0a23c0643b4fdb38",
        "name": "Update Status",
        "func": "node.status({ fill: \"yellow\", shape: \"circle\", text: \"Downloader JSON\" });\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "9b3dd6f36db12512",
        "type": "status",
        "z": "981390739fa10d48",
        "name": "",
        "scope": [
            "b00e1f122daad736",
            "342dc6abedec9c9e",
            "08e6886e143a313f",
            "e83ddd55004fb64e"
        ],
        "x": 1540,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "546f21dc858b174e",
        "type": "change",
        "z": "981390739fa10d48",
        "name": "Set selectors",
        "rules": [
            {
                "t": "set",
                "p": "selectors.kp",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "selectors.kp.url",
                "pt": "msg",
                "to": "https://fagsystem.kommunernespensionssystem.dk/",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.login",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "selectors.kp.login.select",
                "pt": "msg",
                "to": "[id=\"SelectedAuthenticationUrl\"]",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.login.button",
                "pt": "msg",
                "to": ".button",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.inputCPR",
                "pt": "msg",
                "to": "#search_box input",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.inputCPR_soegknap",
                "pt": "msg",
                "to": "#search_box button",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.personligtillaegsprocent",
                "pt": "msg",
                "to": "#person-pension-fakta > tbody > tr:nth-child(5) > td:nth-child(2) > div",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.helbredstillaegsprocent_aabn",
                "pt": "msg",
                "to": "#person-pension-fakta > tbody > tr:nth-child(6) > td:nth-child(3) > div > div > span > span",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.helbredstillaegsprocent",
                "pt": "msg",
                "to": "#person-pension-fakta > tbody > tr:nth-child(6) > td:nth-child(2) > div",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.danmarkgruppe",
                "pt": "msg",
                "to": "#person-oplysninger > tbody > tr:nth-child(6) > td:nth-child(2) > div",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.personligtillaegsprocent_aabn",
                "pt": "msg",
                "to": "#person-pension-fakta > tbody > tr:nth-child(5) > td:nth-child(3) > div > div > span > span",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.tillaegsprocent",
                "pt": "msg",
                "to": "#history_table",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.tillaegsprocent_luk",
                "pt": "msg",
                "to": "#person-pension-fakta div.sc-gPEVay.ceKhsN > div.sc-jlyJG.NUpYs > svg",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.formue",
                "pt": "msg",
                "to": "#person-pension-fakta > tbody > tr:nth-child(4) > td:nth-child(2) > div",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.sager",
                "pt": "msg",
                "to": "#person_overblik_sager_table",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.lukborger",
                "pt": "msg",
                "to": "svg.svg-inline--fa.fa-times.fa-w-11.fa-1x",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "selectors.kp.citizen.bevilling",
                "pt": "msg",
                "to": "#app div.tab-content div.tab-content > div > div > div:nth-child(1) > div",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 290,
        "y": 200,
        "wires": [
            [
                "7cbad3646cbdb01e"
            ]
        ]
    },
    {
        "id": "63994549a48bdba2",
        "type": "change",
        "z": "981390739fa10d48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "citizens",
                "pt": "msg",
                "to": "$distinct(receipts@$A.(\t[\t    {\t        \"cpr\": $A.patientCPR\t    }\t]))",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 160,
        "wires": [
            [
                "546f21dc858b174e"
            ]
        ]
    },
    {
        "id": "7cbad3646cbdb01e",
        "type": "change",
        "z": "981390739fa10d48",
        "name": "Set PupCommands",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "[\t    {\t        \"action\": \"launch\",\t        \"parameters\":\t        {\t            \"headless\": false,\t            \"slowMo\": 50,\t            \"ignoreHTTPSErrors\": true,\t            \"defaultViewport\": null\t        }\t    },\t   {\t       \"action\": \"goto\",\t       \"url\": \"https://fagsystem.kommunernespensionssystem.dk/\"\t\t},\t   {\t       \"action\": \"select\",\t       \"path\": \"[id=\\\"SelectedAuthenticationUrl\\\"]\",\t       \"input\": \"Randers Kommune\"\t\t},\t   {\t       \"action\": \"click\",\t       \"path\": \".button\"\t\t}\t]",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(payload, citizens@$A.(\t   [\t       {\t           \"action\": \"type\",\t           \"input\": $A.cpr,\t           \"path\": selectors.kp.inputCPR\t\t},\t       {\t           \"action\": \"click\",\t           \"path\": selectors.kp.inputCPR_soegknap\t\t},\t       {\t           \"action\": \"click\",\t           \"path\": selectors.kp.citizen.personligtillaegsprocent_aabn\t\t},\t       {\t           \"action\": \"get\",\t           \"name\": \"personligtillaegsprocent\",\t           \"path\": selectors.kp.citizen.tillaegsprocent,\t           \"obj\": $A.cpr\t\t},\t       {\t           \"action\": \"click\",\t           \"path\": selectors.kp.citizen.tillaegsprocent_luk\t\t},\t{\t    \"action\": \"click\",\t    \"path\": selectors.kp.citizen.helbredstillaegsprocent_aabn\t\t},\t{\t    \"action\": \"get\",\t    \"name\": \"helbredstillaegsprocent\",\t    \"path\": selectors.kp.citizen.tillaegsprocent,\t    \"obj\": $A.cpr\t\t},\t{\t    \"action\": \"click\",\t    \"path\": selectors.kp.citizen.tillaegsprocent_luk\t\t},\t       {\t           \"action\": \"get\",\t           \"name\": \"bevilling\",\t           \"path\": selectors.kp.citizen.bevilling,\t           \"obj\": $A.cpr\t\t},\t       {\t           \"action\": \"get\",\t           \"name\": \"sager\",\t           \"path\": selectors.kp.citizen.sager,\t           \"obj\": $A.cpr\t\t},\t       {\t           \"action\": \"get\",\t           \"name\": \"danmarkgruppe\",\t           \"path\": selectors.kp.citizen.danmarkgruppe,\t           \"obj\": $A.cpr\t\t},\t       {\t           \"action\": \"get\",\t           \"name\": \"formue\",\t           \"path\": selectors.kp.citizen.formue,\t           \"obj\": $A.cpr\t\t},\t        {\t            \"action\": \"click\",\t            \"path\": selectors.kp.citizen.lukborger\t}\t\t\t]\t))",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$append(payload,\t{\t    \"action\": \"close\"\t}\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 490,
        "y": 200,
        "wires": [
            [
                "9e8721dd0e11d89c",
                "d86d85f85c92aaa1"
            ]
        ]
    },
    {
        "id": "9e8721dd0e11d89c",
        "type": "subflow:41d1b8798efe7e15",
        "z": "981390739fa10d48",
        "d": true,
        "name": "",
        "x": 740,
        "y": 200,
        "wires": [
            [
                "9c897aef15b24d1a",
                "342dc6abedec9c9e"
            ],
            []
        ]
    },
    {
        "id": "38e185091fcbed93",
        "type": "comment",
        "z": "981390739fa10d48",
        "name": "Sammensæt PupCommands",
        "info": "",
        "x": 520,
        "y": 160,
        "wires": []
    },
    {
        "id": "1a277b96d7e7bf15",
        "type": "comment",
        "z": "981390739fa10d48",
        "name": "Sæt alle CPR",
        "info": "",
        "x": 250,
        "y": 120,
        "wires": []
    },
    {
        "id": "9c897aef15b24d1a",
        "type": "change",
        "z": "981390739fa10d48",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "citizens",
                "pt": "msg",
                "to": "pupOutputs",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "7ade557685186838"
            ]
        ]
    },
    {
        "id": "7ade557685186838",
        "type": "debug",
        "z": "981390739fa10d48",
        "name": "Borgerliste debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "citizens",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1090,
        "y": 240,
        "wires": []
    },
    {
        "id": "abb4709a00ce8d57",
        "type": "comment",
        "z": "981390739fa10d48",
        "name": "Scrape data fra KP",
        "info": "",
        "x": 750,
        "y": 160,
        "wires": []
    },
    {
        "id": "fdc5c417f067d3a9",
        "type": "comment",
        "z": "981390739fa10d48",
        "name": "Flyt til msg.citizens",
        "info": "",
        "x": 1010,
        "y": 160,
        "wires": []
    },
    {
        "id": "08e6886e143a313f",
        "type": "function",
        "z": "981390739fa10d48",
        "name": "Sæt status",
        "func": "node.status({ fill: \"yellow\", shape: \"ring\", text: \"Indsamler borgerdata fra KP\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "342dc6abedec9c9e",
        "type": "function",
        "z": "981390739fa10d48",
        "name": "Sæt status",
        "func": "node.status({ fill: \"green\", shape: \"dot\", text: \"Borgerdata indsamlet\"});\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 990,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "d86d85f85c92aaa1",
        "type": "credentials",
        "z": "981390739fa10d48",
        "name": "testdata",
        "props": [
            {
                "value": "pupOutputs",
                "type": "msg"
            }
        ],
        "x": 680,
        "y": 240,
        "wires": [
            [
                "fd60d780ca334c47"
            ]
        ]
    },
    {
        "id": "fd60d780ca334c47",
        "type": "json",
        "z": "981390739fa10d48",
        "name": "",
        "property": "pupOutputs",
        "action": "",
        "pretty": false,
        "x": 810,
        "y": 240,
        "wires": [
            [
                "9c897aef15b24d1a"
            ]
        ]
    },
    {
        "id": "93a599675881a13b",
        "type": "function",
        "z": "57c40cb841470eb3",
        "name": "Hent eller skab liste med behandlede faktura",
        "func": "//msg.payload = [msg.currentReceipt.antalYdelser];\nvar receipts = global.get(\"processedReceipts\", \"storeInFile\");\nif (typeof receipts != undefined && receipts != null)\n    msg.processedReceipts = receipts;\nelse\n    msg.processedReceipts = [];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 100,
        "wires": [
            [
                "d2a10d8a141aeef9"
            ]
        ]
    },
    {
        "id": "afcf8469f5970c91",
        "type": "debug",
        "z": "57c40cb841470eb3",
        "name": "Super JSON debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "superjson",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 940,
        "wires": []
    },
    {
        "id": "c93619fc1a4bbdb6",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Merge into super-JSON",
        "rules": [
            {
                "t": "set",
                "p": "superjson",
                "pt": "msg",
                "to": "receipts@$A.(\t    /* Funktion til formatering af dato */\t    $formaterDato := function($dato){(\t    $temp:= $substring($A.dato, 0, 10);\t    ($temp ~> $substring(8, 2)) & \"-\" &\t    ($temp ~> $substring(5, 2)) & \"-\" &\t    ($temp ~> $substring(0, 4))\t    )};\t    /* Funktion til formatering af dato */\t    \t{\t    \"id\" :     $A.id,\t    \"dato\" :   $A.dato ~> $formaterDato(),\t\t    /* Hent borger-objekt fra citizens-array */\t    \"borger\" : citizens[ (cpr=$A.patientCPR)],\t    \t    /* Hent tidligere behandlede ydelser med samme ID og tildel værdien til $Y */\t    \"ydelserBehandlet\" : $y :=  processedReceipts[ (id=$A.id) ].ydelserBehandlet,\t\t    /* Hent ydelser fra faktura */\t    /*\"antalYdelser\": ($count($A.behandlinger)),*/\t    \"ydelser\": $A.behandlinger@$B.\t    {\t        /* Flyt relevant data fra faktura + definér behandingstypen (A/B) */\t        \"titel\" :     $B.titel,\t        \"type\"  :    ($B.titel = 'Behandlingipatientsegethjem' or $B.titel = 'Behandlingpåklinik') ? 'A' : 'B',\t        \"ydelsesNummer\" : $B.ydelsesnummer,\t        \"patientAndel\" : $B.patientAndel,\t        \"sygesikringsAndel\" : $B.sygesikringsAndel,\t        \"totalPris\": ($B.patientAndel+$B.sygesikringsAndel),\t\t        /* Tjek om ydelsesnummeret findes blandt tidligere behandlede ydelser på DENNE faktura */\t        \"erBehandlet\":   $y[ ($ = $B.ydelsesnummer) ] ? true : false\t    },\t\t    /* Tjek om alle ydelser på fakturaen er behandlet */\t    \"erBehandlet\" : (($count($A.behandlinger)-($count(processedReceipts[(id=$A.id)].ydelserBehandlet))) <= 0) ? true : false\t})",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 900,
        "wires": [
            [
                "a8b35e056d5d56e5",
                "afcf8469f5970c91"
            ]
        ]
    },
    {
        "id": "2447d68bf144b0c4",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "https://try.jsonata.org/BJCtqQu38",
        "info": "",
        "x": 350,
        "y": 920,
        "wires": []
    },
    {
        "id": "16efa67df790efbb",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "https://try.jsonata.org/zodtXv4HC",
        "info": "",
        "x": 1210,
        "y": 940,
        "wires": []
    },
    {
        "id": "653b55da7267faa0",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Create initial action array (big objects)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "superjson@$A.(\t/* Reference til borger (til brug i funktioner )*/\t$borger := $A.borger;\t\t/* Funktioner til beregning af tilskud */\t/* Tjek bevilling */\t$harBevilling := function($type){ \t    $type = 'B' ?\t        $borger.helbredskort ? true : false\t    :\t        $borger.bevilling ? true : false\t };\t/* Tjek helbredstillægssag */\t$harHelbredstillaegsSag := function($type){\t    $type = 'B' ?\t        $borger.almHelbredstillaeg ? true : false\t    :\t        $borger.udvidetHelbredstillaeg ? true : false\t};\t\t/* Opret skelet-objekt for faktura som skal behandles */\t$A.erBehandlet = false ?\t{\t    \"id\": $A.id,\t\t    /* Opret sub-objekt for hver ydelse på faktura */\t    \"ydelser\":\t    $A.ydelser@$B.\t    [\t        /* Tjek om ydelsen allerede er behandlet */\t        $B.erBehandlet = false ?\t        {\t\t            \"type\": $B.type,\t            \"erBevilget\": $harBevilling($B.type),\t            \"sagForeligger\": $harHelbredstillaegsSag($B.type),\t\t            /* Opret liste over handlinger */\t            /* Tilføj handlinger for oprettelse af sager, hvis beviling foreligger men ingen sag gør */\t            \"handlinger\": \t                $harHelbredstillaegsSag($B.type) ?\t                    {\t                        /* Sag foreligger for den behandlingstypen */\t                        \"titel\": \"Tilføj ydelse til sag\",\t                        \"type\": $B.type,\t                        \"tilskud\": 0,\t                        \"erBehandlet\": false\t                    }\t                : $harBevilling($B.type) ?\t                    [{\t                        /* INGEN sag foreligger for den behandlingstypen, men borger er bevilget */\t                        \"titel\": \"Opret sag\",\t                        \"type\": $B.type,\t                        \"erBehandlet\": false\t                    },\t                    {\t                        /* Sag foreligger for den behandlingstypen */\t                        \"titel\": \"Tilføj ydelse til sag\",\t                        \"type\": $B.type,\t                        \"tilskud\": 0,\t                        \"erBehandlet\": false\t                    }]\t                :\t                    {\t                        /* INGEN sag foreligger og borger er IKKE bevilget */\t                        \"titel\": \"Rapportér fejl: Ingen gyldig bevilling\",\t                        \"type\": $B.type,\t                        \"erBehandlet\": true\t                    }\t\t        } : {}\t    ]\t}\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1230,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "9f4fc3771159754f",
        "type": "debug",
        "z": "57c40cb841470eb3",
        "name": "Receipt actions",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "actions",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1940,
        "y": 1020,
        "wires": []
    },
    {
        "id": "1969503ae5f8c6e8",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "Tjek bevillinger og opret skelet for alle handlinger som skal udføres",
        "info": "",
        "x": 1780,
        "y": 900,
        "wires": []
    },
    {
        "id": "6309d08fc3ae7141",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "Beregn tilskud for alle handlinger",
        "info": "",
        "x": 1670,
        "y": 940,
        "wires": []
    },
    {
        "id": "40aab6e10f0bf515",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Create initial action array (action objects)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "superjson@$A.(\t/* Reference til borger (til brug i funktioner )*/\t$borger := $A.borger;\t\t/* Funktioner til beregning af tilskud */\t/* Tjek bevilling */\t$harBevilling := function($type){ \t    $type = 'B' ?\t        $borger.helbredskort ? true : false\t    :\t        $borger.bevilling ? true : false\t };\t/* Tjek helbredstillægssag */\t$harHelbredstillaegsSag := function($type){\t    $type = 'B' ?\t        $borger.almHelbredstillaeg ? true : false\t    :\t        $borger.udvidetHelbredstillaeg ? true : false\t};\t\t/* Opret skelet-objekt for faktura som skal behandles */\t$A.erBehandlet = false ?\t$A.ydelser@$B.\t\t    /* Opret sub-objekt for hver ydelse på faktura */\t    /* Opret liste over handlinger */\t    /* Tilføj handlinger for oprettelse af sager, hvis beviling foreligger men ingen sag gør */\t    $harHelbredstillaegsSag($B.type) ?\t        {\t            /* Sag foreligger for den behandlingstypen */\t            \"id\": $A.id,\t            \"titel\": \"Tilføj ydelse til sag\",\t            \"type\": $B.type,\t            \"tilskud\": 0,\t            \"erBehandlet\": false\t        }\t    : $harBevilling($B.type) ?\t        [{\t            /* INGEN sag foreligger for den behandlingstypen, men borger er bevilget */\t            \"id\": $A.id,\t            \"titel\": \"Opret sag\",\t            \"type\": $B.type,\t            \"erBehandlet\": false\t        },\t        {\t            /* Sag foreligger for den behandlingstypen */\t            \"id\": $A.id,\t            \"titel\": \"Tilføj ydelse til sag\",\t            \"type\": $B.type,\t            \"tilskud\": 0,\t            \"erBehandlet\": false\t        }]\t    :\t        {\t            /* INGEN sag foreligger og borger er IKKE bevilget */\t            \"id\": $A.id,\t            \"titel\": \"Rapportér fejl: Ingen gyldig bevilling\",\t            \"type\": $B.type,\t            \"erBehandlet\": true\t        }\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "78aea2501347dec6",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "https://try.jsonata.org/B13gIw93V",
        "info": "",
        "x": 1210,
        "y": 1020,
        "wires": []
    },
    {
        "id": "a8b35e056d5d56e5",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Create initial action array (treatment objects)",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "superjson@$A.(\t/* Reference til borger (til brug i funktioner)*/\t$borger := $A.borger;\t\t/* Funktioner til beregning af tilskud */\t/* Tjek bevilling */\t$harBevilling := function($type){ \t    $type = 'B' ?\t        $borger.helbredskort ? true : false\t    :\t        $borger.bevilling ? true : false\t };\t/* Tjek helbredstillægssag */\t$harHelbredstillaegsSag := function($type){\t    $type = 'B' ?\t        $borger.almHelbredstillaeg ? true : false\t    :\t        $borger.udvidetHelbredstillaeg ? true : false\t};\t\t/* Opret skelet-objekt for faktura som skal behandles */\t$A.erBehandlet = false ?\t{\t    \"id\": $A.id,\t    \"dato\": $A.dato,\t    \"borger\": $borger,\t\t    \"handlinger\": $A.ydelser@$B.( $B.erBehandlet = false ?\t    /* Opret sub-objekt for handling krævet for hver ubehandlet ydelse på faktura */\t    /* Tilføj først handlinger for oprettelse af sager, hvis beviling foreligger, men ingen sag gør */\t    /* Tilføj dernæst ydelsen til sagen *//* Tjek til sidst for duplikater og fjern evt. */\t    $harHelbredstillaegsSag($B.type) ?\t    {\t        /* Sag foreligger for den behandlingstypen */\t        \"id\": $A.id,\t        \"handling\": \"Tilføj ydelse til sag\",\t        \"ydelse\": $B.titel,\t        \"ydelsesNummer\": $B.ydelsesNummer,\t        \"type\": $B.type,\t        \"patientAndel\": $B.patientAndel,\t        \"pris\": $B.totalPris,\t        \"tilskud\": 0,\t        \"erBehandlet\": false\t    }\t    : $harBevilling($B.type) ?\t        [{\t            /* INGEN sag foreligger for den behandlingstypen, men borger er bevilget */\t            \"id\": $A.id,\t            \"handling\": \"Opret sag\",\t            \"type\": $B.type,\t            \"erBehandlet\": false\t        },\t        {\t            /* Sag er netop oprettet */\t            \"id\": $A.id,\t            \"handling\": \"Tilføj ydelse til sag\",\t            \"ydelse\": $B.titel,\t            \"ydelsesNummer\": $B.ydelsesNummer,\t            \"type\": $B.type,\t            \"patientAndel\": $B.patientAndel,\t            \"pris\": $B.totalPris,\t            \"tilskud\": 0,\t            \"erBehandlet\": false\t        }]\t    :\t            {\t                /* INGEN sag foreligger og borger er IKKE bevilget */\t                \"id\": $A.id,\t                \"handling\": \"Rapportér fejl: Ingen gyldig bevilling\",\t                \"type\": $B.type,\t                \"erBehandlet\": true\t            }\t        \t    )\t}\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 900,
        "wires": [
            [
                "08759468cf1fc1f8"
            ]
        ]
    },
    {
        "id": "01cfc8bc9bdeb061",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "https://try.jsonata.org/Kf7FRl9_j",
        "info": "",
        "x": 670,
        "y": 920,
        "wires": []
    },
    {
        "id": "08759468cf1fc1f8",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Merge inital action array based on CPR",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "citizens@$A.(\t{\t    \"borger\": $A,\t    \"handlinger\": $distinct((payload[borger.cpr = $A.cpr].handlinger)@$B.\t    ({\t        \"id\": $B.id,\t        \"handling\": $B.handling,\t        \"ydelse\": $B.ydelse,\t        \"ydelsesNummer\": $B.ydelsesNummer,\t        \"type\": $B.type,\t        \"patientAndel\": $B.patientAndel,\t        \"pris\": $B.pris,\t        \"tilskud\": 0,\t        \"erBehandlet\": false\t    }))\t})",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 700,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "13b4db29cca3bcdd",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "https://try.jsonata.org/pOjD-6WF8",
        "info": "",
        "x": 670,
        "y": 1000,
        "wires": []
    },
    {
        "id": "8b2490733399742a",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Super-transformer",
        "rules": [
            {
                "t": "set",
                "p": "actions",
                "pt": "msg",
                "to": "/* Iterér over borger-liste */\tcitizens@$A.(\t\t    /* Skab referencer */\t    $behandledeFakturaer := processedReceipts[];\t\t    /* Funktion til at skabe unikt ydelses-ID */\t    $skabID := function($fakturaID, $ydelsesNummer, $count){\t        ($fakturaID ~> $substring(19,17)) & \"-\" & $ydelsesNummer & \"-\" & ($count+1)\t    };\t    /* Funktion til at finde type for behandling */\t    $findType := function($behandlingstitel){\t        ($behandlingstitel = 'Behandlingipatientsegethjem' or $behandlingstitel = 'Behandlingpåklinik') ? 'A' : 'B'\t    };\t    /* Funktioner til kontrol af bevilling + helbredstillægssag + formue/tillægsprocent */\t    $harBevilling := function($type){ \t        $type = 'B' ? $A.helbredskort ? true : false : $A.bevilling ? true : false\t    };\t    $harHelbredstillaegsSag := function($type){\t        $type = 'B' ? $A.almHelbredstillaeg ? true : false : $A.udvidetHelbredstillaeg ? true : false\t    };\t    $erBerretiget  := function(){\t        (($A.tillaegsprocent > 0) and ($A.formue <= tilskudsInfo.formuegraense))\t    };\t    $findDanmarksTilskud := function($ydelse, $dato){(\t        $dato_ms := $toMillis($dato);\t        (tilskudsInfo.tilskudsperioder[\t            ((periode_fra ~> $toMillis) <= $dato_ms)\t            and \t            ((periode_til ~> $toMillis) >= $dato_ms)\t        ]).satser[\t            ((titel ~> $replace(\" \", \"\")) = $ydelse.titel)\t        ]\t    )};\t    /* Funktion til udregning af tilskud! */\t    $udregnTilskud := function($ydelse, $type, $dato){(\t        /* TYPE A */\t        ($type = 'A') ?\t        (\t           /* Sikr at hele beløbet er patient-andel */\t           $belob := ($ydelse.patientAndel + $ydelse.sygesikringsAndel);\t           /* Fratræk 50% af egenbetaling (maks 100 kr) hvis medlem af Danmark gruppe 1/2 */\t           $belob := ($A.danmarkGruppe = 1) or ($A.danmarkGruppe = 2) ?\t                        ($belob - (($belob*(tilskudsInfo.danmark_fratraek_procent/100)) > tilskudsInfo.danmark_fratraek_maxdkk ?\t                            tilskudsInfo.danmark_fratraek_maxdkk : ($belob*(tilskudsInfo.danmark_fratraek_procent/100))))\t                            : $belob;\t            /* Sikr at tilskudsbeløbet ikke overstiger beløbsgrænsen */\t            $belob := ($ydelse.titel = \"Behandlingipatientsegethjem\") ?\t                        (($belob > tilskudsInfo.max_udekoersel) ? tilskudsInfo.max_udekoersel : $belob)\t                        : (($belob > tilskudsInfo.max_hjemmebehandling) ? tilskudsInfo.max_hjemmebehandling : $belob);\t            /* Gang med tillægsprocent */\t            $belob := ($belob * ($A.tillaegsprocent / 100))\t        ) :\t        /* TYPE B */\t        (\t           $belob := $ydelse.patientAndel;\t           /* Find tilskud fra Danmark og fratræk det fra tilskudsbeløbet */\t           $fratraek := ($belob * ($findDanmarksTilskud($ydelse, $dato).tilskud_procent / 100)) <= $findDanmarksTilskud($ydelse, $dato).tilskud_maxdkk ?\t                        ($belob * ($findDanmarksTilskud($ydelse, $dato).tilskud_procent / 100)) : $findDanmarksTilskud($ydelse, $dato).tilskud_procent;\t           $belob := $belob - $fratraek;\t           /* Gang med tillægsprocent */\t           $belob := ($belob * ($A.tillaegsprocent / 100));\t           $belob\t        )\t    )};\t    /* Funktion til formatering af dato */\t    $formaterDato := function($dato){\t        $toMillis($dato) ~> $fromMillis('[Y0001]-[M01]-[D01]')\t    };\t\t/* Opret objekt for hver borger der har ubehandlede faktura */\t{\t    \"borger\": $A,\t\t    /* Opret sub-objekt for handling krævet for hver ydelse på faktura */\t    \"handlinger\": $distinct(receipts[patientCPR = $A.cpr].behandlinger@$B#$index.\t    (\t        /* Skab unikt ID for ydelsen */\t        $ydelsesID := $skabID(id, $B.ydelsesnummer, $index);\t        /* Find type for ydelsen */\t        $ydelsesType := $findType($B.titel);\t        /* Reference til faktura ID */\t        $fakturaID := id;\t\t        /* Kontoller at denne ydelse ikke allerede er behandlet */\t        (($exists($behandledeFakturaer[id = $fakturaID]) = false)\t              or ($behandledeFakturaer[id = $fakturaID].erBehandlet = false)) ?\t        (\t            /* Kontroller at borgernes parametre overholdes */\t            $erBerretiget() ?\t            (\t\t            /* Tilføj først oprettelse af sager, hvis beviling foreligger, men ingen aktuel sag gør */\t            /* Tilføj dernæst ydelsen til sagen */\t            $harHelbredstillaegsSag($ydelsesType) ?\t            {\t                /* Sag foreligger for den behandlingstypen */\t                \"fakturaID\": $fakturaID,\t                \"ydelsesID\": $ydelsesID,\t                \"handling\": \"Tilføj ydelse til sag\",\t                \"dato\": $formaterDato(dato),\t                \"tilskud\": $udregnTilskud($B, $ydelsesType, dato),\t                \"erForetaget\": false\t            }\t            : $harBevilling($ydelsesType) ?\t                [{\t                    /* INGEN sag foreligger for den behandlingstypen, men borger er bevilget */\t                    \"handling\": \"Opret sag\",\t                    \"type\": $ydelsesType,\t                    \"erForetaget\": false\t                },\t                {\t                    /* Sag er netop oprettet */\t                    \"fakturaID\": $fakturaID,\t                    \"ydelsesID\": $ydelsesID,\t                    \"handling\": \"Tilføj ydelse til sag\",\t                    \"dato\": $formaterDato(dato),\t                    \"tilskud\": $udregnTilskud($B, $ydelsesType, dato),\t                    \"erForetaget\": false\t                }]\t                :\t                    {\t                        /* INGEN sag foreligger og borger er IKKE bevilget */\t                        \"fakturaID\": $fakturaID,\t                        \"ydelsesID\": $ydelsesID,\t                        \"handling\": \"Rapportér fejl: Ingen gyldig bevilling\",\t                        \"dato\": $formaterDato(dato),\t                        \"erForetaget\": true\t                    }\t            ) : ({\t                /* Borger er IKKE berettiget tilskud (formue eller tillægsprocent) */\t                \"fakturaID\": $fakturaID,\t                \"ydelsesID\": $ydelsesID,\t                \"handling\": \"Rapportér fejl: Borger ej berettiget\",\t                \"fejl\": ($A.tillaegsprocent > 0) ? \"Formue overstiger beløbsgrænse\" : \"Tillægsprocent er 0\",\t                \"dato\": $formaterDato(dato),\t                \"erForetaget\": true\t            })\t            )\t        )\t    )\t}\t)",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1630,
        "y": 980,
        "wires": [
            [
                "9f4fc3771159754f"
            ]
        ]
    },
    {
        "id": "2b4be15b7138659e",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "https://try.jsonata.org/VesE-84-1",
        "info": "",
        "x": 1670,
        "y": 1020,
        "wires": []
    },
    {
        "id": "bf35e6be5897e23c",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "https://try.jsonata.org/z6oNnGbCv",
        "info": "",
        "x": 1670,
        "y": 1060,
        "wires": []
    },
    {
        "id": "d2a10d8a141aeef9",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Saml objekt",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "/* Laver array med objekt for hver borger, og tilknytter fakturaer */\t\t$keys(citizens)@$k.{\t\t    \"cpr\": $k,\t    \"persondata\": $lookup(citizens, $k),\t    \"faktura\": receipts[$.patientCPR = $k]\t    \t}\t",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 100,
        "wires": [
            [
                "9b6a59f20dfa29a7"
            ]
        ],
        "info": "https://try.jsonata.org/wRgtKDrKD"
    },
    {
        "id": "4103f282d5b1c53a",
        "type": "debug",
        "z": "57c40cb841470eb3",
        "name": "Transform debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 360,
        "wires": []
    },
    {
        "id": "049e2662d398e537",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "Saml borgere og fakturaer",
        "info": "https://try.jsonata.org/wRgtKDrKD",
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "d3d1f3896a9c7690",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Personlig tillægsprocenter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$.persondata|(\t\t$tillaegsprocent_split := personligtillaegsprocent\t    ~> $replace(\"Personlig tillægsprocent\\tGyldig fra\\tGyldig til\\tAjourføringsdato\\n\", \"\")\t    ~> $split(\"\\n\");\t{\t\t\"personligtillaegsprocent\": $tillaegsprocent_split #$i .{\t\t    \"dato_fra\": ($tillaegsprocent_split[$i]\t        ~> $split(\"\\t\"))[1]\t        ~> $toMillis('[D01]-[M01]-[Y0001]')\t        ~> $fromMillis('[Y0001]-[M01]-[D01]'),\t\t    \"dato_til\": ($tillaegsprocent_split[$i]\t        ~> $split(\"\\t\"))[2]\t        ~> $toMillis('[D01]-[M01]-[Y0001]')\t        ~> $fromMillis('[Y0001]-[M01]-[D01]'),\t\t    \"tillaegsprocent\": ($t := (($tillaegsprocent_split[$i]\t        ~> $split(\"\\t\"))[0]\t        ~> $replace(\"%\", \"\")\t        ~> $replace(\"Ingen resultater fundet\", \"0\"));\t          ($t = \"\" ? 0 : $number($t)))\t    }\t\t}\t)|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 240,
        "wires": [
            [
                "389d55ec31c05eb6"
            ]
        ],
        "info": "https://try.jsonata.org/4J8IPRU83"
    },
    {
        "id": "9b6a59f20dfa29a7",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Bevilget tilskud til fodpleje?",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$.persondata|\t{\t\"bevilling\":\t    bevilling \t    ~> $contains(\"Bevilget tilskud til fodpleje\")\t}|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 200,
        "wires": [
            [
                "d3d1f3896a9c7690"
            ]
        ]
    },
    {
        "id": "ca4bccfca6a2e381",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "JSONata Transform Documentation",
        "info": "https://docs.jsonata.org/other-operators#-------transform",
        "x": 220,
        "y": 620,
        "wires": []
    },
    {
        "id": "dc95479810e8b01f",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "Gør KP data maskinelt læsbart",
        "info": "",
        "x": 330,
        "y": 160,
        "wires": []
    },
    {
        "id": "29941f85cbe39f21",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Tildel unikke behandlings-ID'er",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> | $.faktura |\t({\t\t\"behandlinger\": behandlinger @$b #$i .{\t\t    \"uid\": (id ~> $substring(19,17))\t            & \"-\" & $b.ydelsesnummer\t            & \"-\" & ($i+1),\t\t    \"titel\": $b.titel,\t    \"ydelsesnummer\": $b.ydelsesnummer,\t    \"behandlingsKategory\": $b.behandlingsKategory,\t    \"pris\": $b.pris,\t    \"kørteKilometer\": $b.kørteKilometer,\t    \"patientAndel\": $b.patientAndel,\t    \"sygesikringsAndel\": $b.sygesikringsAndel\t\t}\t})|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 340,
        "wires": [
            [
                "c0588449c65779d7"
            ]
        ],
        "info": "https://try.jsonata.org/zbfWKbpM7"
    },
    {
        "id": "389d55ec31c05eb6",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Helbredstillægsprocenter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$.persondata|(\t\t$tillaegsprocent_split := helbredstillaegsprocent\t    ~> $replace(\"Helbredstillægsprocent\\tGyldig fra\\tGyldig til\\tAjourføringsdato\\n\", \"\")\t    ~> $split(\"\\n\");\t{\t\t\"helbredstillaegsprocent\": $tillaegsprocent_split #$i .{\t\t    \"dato_fra\": ($tillaegsprocent_split[$i]\t        ~> $split(\"\\t\"))[1]\t        ~> $toMillis('[D01]-[M01]-[Y0001]')\t        ~> $fromMillis('[Y0001]-[M01]-[D01]'),\t\t    \"dato_til\": ($tillaegsprocent_split[$i]\t        ~> $split(\"\\t\"))[2]\t        ~> $toMillis('[D01]-[M01]-[Y0001]')\t        ~> $fromMillis('[Y0001]-[M01]-[D01]'),\t\t    \"tillaegsprocent\": ($t := (($tillaegsprocent_split[$i]\t        ~> $split(\"\\t\"))[0]\t        ~> $replace(\"%\", \"\")\t        ~> $replace(\"Ingen resultater fundet\", \"0\"));\t          ($t = \"\" ? 0 : $number($t)))\t    }\t\t}\t)|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 280,
        "wires": [
            [
                "4e2e7bd654f07882"
            ]
        ],
        "info": "https://try.jsonata.org/4J8IPRU83"
    },
    {
        "id": "4e2e7bd654f07882",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Sager",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$.persondata|(\t\t$sager_split := sager\t    ~> $replace(\"\\n\", \"\")\t    ~> $replace(\"\\t\\t\", \"\\t\")\t    ~> $substringAfter(\"\\t\")\t    ~> $split(\"\\t\");\t{\t    \"sager\": $sager_split #$i .(\t\t        /* Hvis kolonne-antal ændrer sig, breaker denne kode */\t\t        $i % 5 = 0 and $i != 0 ?\t        {\t            \"titel\": $sager_split[$i],\t            \t            \"type\": $sager_split[$i+1],\t\t            \"fra\": $sager_split[$i+2]\t                ~> $toMillis('[D01]-[M01]-[Y0001]')\t                ~> $fromMillis('[Y0001]-[M01]-[D01]'),\t\t            \"til\": $sager_split[$i+3]\t                ~> $toMillis('[D01]-[M01]-[Y0001]')\t                ~> $fromMillis('[Y0001]-[M01]-[D01]'),\t\t            \"bevilling\": ($sager_split[$i+4] = \"Bevilget\")\t        })\t\t    }\t)|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 320,
        "wires": [
            [
                "4d8f6d389a3393e9"
            ]
        ],
        "info": "https://try.jsonata.org/4J8IPRU83"
    },
    {
        "id": "4d8f6d389a3393e9",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Formue",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$.persondata|\t{\t    \"formue\": (formue\t        ~> $replace(\"Ikke oplyst\", \"-1\")\t        ~> $replace(\"-\", \"-1\")\t        ~> $split(\" \"))[0]\t        ~> $replace(\".\", \"\")\t        ~> $replace(\",\", \".\")\t        ~> $number()\t}\t|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 320,
        "wires": [
            [
                "d91b5b06b3e922e8"
            ]
        ]
    },
    {
        "id": "d91b5b06b3e922e8",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Danmark",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$.persondata|\t{\t    \"danmarkgruppe\": danmarkgruppe\t        ~> $replace(\"Ikke oplyst\", \"-1\")\t        ~> $replace(\"Nej\", \"-1\")\t        ~> $replace(\"Ja - Gruppe \", \"\")\t        ~> $replace(\"-\", \"-1\")\t        ~> $number()\t}\t|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 360,
        "wires": [
            [
                "baefa4faa88d4ac2"
            ]
        ]
    },
    {
        "id": "2dcfd255fe138a85",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "Transformer faktura data (+ fjern unødvendig data)",
        "info": "",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "baefa4faa88d4ac2",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Fjern unødvendig data",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$.faktura|\t{},\t[\t    \"behandlerNavn\",\t    \"klinikNavn\",\t    \"klinikCVR\",\t    \"behandlerType\",\t    \"ydernummer\",\t    \"patientTelefon\"\t]\t|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 260,
        "wires": [
            [
                "6e831fa4b9c7fcbe"
            ]
        ]
    },
    {
        "id": "6e831fa4b9c7fcbe",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Fjern tidspunkt fra dato",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$.faktura|\t{\t    \"dato\": (dato\t        ~> $split(\"T\"))[0]\t}\t|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 300,
        "wires": [
            [
                "29941f85cbe39f21"
            ]
        ]
    },
    {
        "id": "a70bc5935e07d520",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "Opret sager + ydelser",
        "info": "",
        "x": 1140,
        "y": 280,
        "wires": []
    },
    {
        "id": "69226bdba456c78f",
        "type": "comment",
        "z": "57c40cb841470eb3",
        "name": "Beregn tilskud",
        "info": "",
        "x": 1490,
        "y": 280,
        "wires": []
    },
    {
        "id": "c0588449c65779d7",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Bestem behandlingstype",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> | $.faktura.behandlinger |\t({\t\t    \"type\": (titel = 'Behandlingipatientsegethjem' or titel = 'Behandlingpåklinik') ? 'A' : 'B'\t\t})|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 730,
        "y": 380,
        "wires": [
            [
                "466cd28967b4778b"
            ]
        ],
        "info": "https://try.jsonata.org/zbfWKbpM7"
    },
    {
        "id": "466cd28967b4778b",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Tilføj sager + ydelser til handlinger",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$|(\t\t$faktura := faktura;\t\t$harBevilling := function($type)\t{\t    $type = \"A\" ?\t        $.persondata.bevilling\t    :\t        $.persondata.sager [ \t            type ~> $lowercase ~> $contains(\"helbredstillægskort\")\t        ] ?\t            true : false\t};\t\t$sagForeligger := function($type, $dato)\t{\t    $.persondata.sager [\t        $type = 'A' ?\t            type ~> $lowercase ~> $contains(\"udvidet helbred\")\t        and \t            titel ~> $lowercase ~> $contains(\"fod\")\t            :\t            type ~> $lowercase ~> $contains(\"almindeligt helbred\")\t    and\t        ($dato ~> $toMillis) > (fra ~> $toMillis)\t    and\t        (til ? ($dato ~> $toMillis) < (til ~> $toMillis) : true)\t    and\t        bevilling = true\t    ] ?\t        true : false\t};\t\t{\t    \"handlinger\": faktura.behandlinger @$b .(\t        $b := $b;\t\t        $sagForeligger($b.type, $faktura.dato) = false ?\t        $harBevilling($b.type) ? \t\t        [{\t            \"handling\": \"Opret sag\",\t            \"type\": $b.type\t        },\t        {\t            \"handling\": \"Tilføj ydelse\",\t            \"type\": $b.type,\t            \"uid\": $b.uid,\t            \"dato\": $faktura.dato\t        }]\t        : () : \t        {\t            \"handling\": \"Tilføj ydelse\",\t            \"type\": $b.type,\t            \"uid\": $b.uid,\t            \"dato\": $faktura.dato\t        }\t    ) ~> $distinct\t}\t\t)|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1180,
        "y": 320,
        "wires": [
            [
                "655f0c88aaaa1c6a"
            ]
        ],
        "info": "https://try.jsonata.org/re36DEF4i"
    },
    {
        "id": "655f0c88aaaa1c6a",
        "type": "change",
        "z": "57c40cb841470eb3",
        "name": "Beregn tilskud",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "$.payload ~> |$|(\t\t$faktura := faktura;\t\t$tillaegsprocent := function($dato)\t{\t    $.persondata.helbredstillaegsprocent [\t        ($dato ~> $toMillis) > (dato_fra ~> $toMillis)\t    and\t        ($dato ~> $toMillis) < (dato_til ~> $toMillis)\t    ] /* .tillaegsprocent */\t};\t\t{\t    \"handlinger\": handlinger @$h .(\t        $h := $h;\t        {\t            \"handling\": $h.handling,\t            \"type\": $h.type,\t            \"uid\": $h.uid,\t            \"dato\": $h.dato,\t            \"tillaegsprocent\": $aktueltillaeg := $tillaegsprocent($h.dato)\t        }\t    )\t}\t\t)|",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 320,
        "wires": [
            [
                "4103f282d5b1c53a"
            ]
        ],
        "info": "https://try.jsonata.org/zbfWKbpM7"
    },
    {
        "id": "57300174d1783ae5",
        "type": "change",
        "z": "3a3b104b02c5ccd9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "selectors.kp",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b93057423dbab117",
        "type": "http in",
        "z": "41d1b8798efe7e15",
        "name": "",
        "url": "/pup",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 160,
        "wires": [
            [
                "f38a2efe43edd64e"
            ]
        ]
    },
    {
        "id": "ccd6ab4c66afb0c3",
        "type": "template",
        "z": "41d1b8798efe7e15",
        "name": "CSS",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* Import Google Font - Poppins */\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');\n*{\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\nfont-family: 'Poppins', sans-serif;\ncolor:rgb(204, 204, 204)\n}\n*:focus\n{\noutline: none;\n}\nbody{\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\ndisplay: flex;\nalign-content: stretch;\nflex-direction: column;\n}\n.flex\n{\nwidth: 100%;\ndisplay: inline-flex;\nflex-grow: 1;\n}\n.containerLeft\n{\nwidth: 55%;\nbackground: #282b2f;\n/*box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);*/\n}\n.containerRight\n{\nheight: calc(100vh - 30px);\nwidth: 45%;\noverflow-y:auto;\nbackground-color: #1d2025;\nborder-left: 4px solid rgb(29, 31, 29);\n}\n\n/* BOTTOM CMD */\n.commandLine\n{\nline-height: 30px;\ncolor:darkslategray;\nwidth:100%;\nbackground-color: #0b0c0c;\npadding-left: 15px;\n}\n.cmd\n{\nwidth: calc(100% - 30px);\nheight: 100%;\nborder:0px;\nbackground-color: #0b0c0c;\npadding-left: 5px;\nfont-family: monospace;\nfont-size: 15px;\n}\n\n/* RIGHT CONTAINER - TEXT AREA\n.containerRight textarea\n{\nbackground: linear-gradient(135deg, #141618, #191c22);\npadding: 10px 20px;\nwidth:100%;\nheight:100vh;\nborder: 0px;\n} */\n.editor {\ndisplay: inline-flex;\nalign-content: stretch;\nline-height: 21px;\nfont-size: 12px;\nbackground: linear-gradient(135deg, #1a1c20, #1d2025);\nwidth:100%;\n}\n\n.textarea {\noverflow-wrap:break-word;\nwhite-space: pre-wrap;\nline-height: 21px;\n/*overflow-y: hidden;\nbackground: #282a3a;\nheight: 100vh;\ncolor: #FFF;*/\nmin-height: calc(100vh - 30px);\noverflow:hidden;\noutline: none;\nresize: none;\nfont-family: monospace;\nflex-grow: 1;\ncolor:rgb(214, 211, 211);\n\nbackground: linear-gradient(135deg, #141618, #191c22);\npadding: 10px 15px;\nborder: 0px;\n}\n.line-numbers {\npadding: 10px 0px;\nmargin-right: 10px;\nwidth: 35px;\ntext-align: right;\nflex-grow: 0;\n}\n\n.line-numbers span {\ncounter-increment: linenumber;\n}\n\n.line-numbers span::before {\ncontent: counter(linenumber);\ndisplay: block;\ncolor: darkslategray;\nfont-family: monospace;\n}\n\n\n\n\n/* LEFT CONTAINER - VISUAL EDITOR */\n.menu\n{\nbox-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\nbackground: #282b2f;\nbackground: linear-gradient(135deg, rgb(29, 31, 29) 0%, rgb(22, 24, 24) 100%); /* #232626 */\n}\n.menu .menupoints\n{\nfont-size: 12px;\nline-height: 35px;\npadding-left: 12px;\ntext-transform: capitalize;\nbackground: linear-gradient(135deg, rgb(21, 22, 21) 0%, rgb(16, 17, 17) 100%);\n}\n.menupoints div\n{\ndisplay: inline-flex;\npadding: 0px 10px;\n}\n.menupoints div:hover\n{\nbackground: #232626;\ncursor: pointer;\n}\n\n.controls{\npadding: 7px 10px;\npadding-bottom: 14px;\ntext-align: left;\nmax-height: 61px;\noverflow-y: auto;\n}\n.controls div\n{\nfont-size: 12px;\ntext-transform: capitalize;\ncolor:darkslategray;\npadding-left: 3px;\n}\n.controls .button{\nborder: none;\nopacity: 0.4;\noutline: none;\ncolor: #fff;\ncursor: pointer;\nfont-size: 13px;\npadding: 8px 18px;\nmargin-top:4px;\nborder-radius: 3px;\nletter-spacing: 0.3px;\npointer-events: none;\ntransition: transform 0.25s ease;\nbackground: #344b48; /* 343c4b */\n}\n.controls .button:not(:first-child)\n{\nmargin-left: 3px;\n}\n.button:hover\n{\nbackground: #4d6f6b;\n}\n.button.active{\nopacity: 1;\npointer-events: auto;\n}\n.button:active{\ntransform: scale(0.93);\n}\n\n\n\n\n.commandList\n{\npadding: 10px 8px;\nwidth:100%;\noverflow-y: auto;\nmax-height:calc(100vh - 126px);\nheight: 100%;\noverflow-x: hidden;\n/*background-color: darkslategray;*/\n}\n.commandList span\n{\npadding-left: 7px;\n}\n.commandList.overflow{\noverflow-y: auto;\n}\n*::-webkit-scrollbar{\nwidth: 5px;\n}\n*::-webkit-scrollbar-track{\nbackground: #3f4349;\nborder-radius: 25px;\n}\n*::-webkit-scrollbar-thumb{\nbackground: #6d6d6d;\nborder-radius: 25px;\n}\n\n\n.commandList .task\n{\nlist-style: none;\nfont-size: 15px;\n\nmargin-bottom: 5px;\nborder-radius: 5px;\n\nbox-shadow: 3px 3px 3px rgba(20, 20, 20, 0.05);\nbackground: linear-gradient(135deg, #32363a, #2d3135);\n}\n    .task.current\n    {\n        background: linear-gradient(135deg, #3f2f4f, #4a3859)!important;\n        /*background: linear-gradient(135deg, #99597d, #804b67)!important;*/\n    }\n    .task.error\n    {\n        background: linear-gradient(135deg, #6e4a48, #6b4a46)!important;\n        /*background: linear-gradient(135deg, #9c5c5c, #854e4e)!important;*/\n    }\n.commandList .task > div\n{\npadding-left: 20px;\ndisplay: inline-flex;\nalign-items: flex-start;\nflex-wrap: wrap;\ngap: 15px;\nwidth: 100%;\nmax-width: 100%!important;\npadding-top: 8px;\npadding-bottom: 8px;\nline-height: 25px;\n}\n.task span\n{\ncolor: rgb(136, 136, 136);\nfont-family: monospace;\nline-height: 25px;\nfont-size:12px;\n}\n.task p\n{\n    text-transform: capitalize;\n}\n.commandList .task > div > div\n{\ncolor: rgb(114, 153, 153);\nfont-family: monospace;\n}\n.commandList .task > div input\n{\nbackground-color: #535353;\nborder: 0px;\nborder-radius: 3px;\nline-height: 25px;\npadding: 0px 10px;\nfont-family: monospace;\nwidth: auto;\nmax-width: calc(100vh - 150px);\n}\n\n.commandList .task > div > div.filler\n{\nflex-grow: 1;\nflex-shrink: 1;\n}\n.commandList .settings\n{\nposition: relative;\nfloat: right;\npadding-right:10px;\n/*top: -16px;*/\nflex-grow: 0!important;\n}\n.settings :where(i, li){\ncursor: pointer;\n}\n.settings .bulletinMenu{\nz-index: 10;\nright: 12px;\npadding: 5px 0;\nbackground: #757575;\nposition: absolute;\nborder-radius: 4px;\ntransform: scale(0);\ntransform-origin: top right;\nbox-shadow: 0 0 6px rgba(0,0,0,0.15);\ntransition: transform 0.2s ease;\n}\n.commandList .task:last-child:not(:first-child) .bulletinMenu{\nbottom: 20px;\ntransform-origin: bottom right;\n}\n.commandList .task:not(:last-child) .bulletinMenu{\ntop: 20px;\n}\n/*\n.commandList .task:first-child .bulletinMenu{\nbottom: -65px;\ntransform-origin: top right;\n}*/\n.bulletinMenu.show{\ntransform: scale(1);\n}\n.bulletinMenu li{\nheight: 25px;\nfont-size: 12px;\nline-height: 25px;\nmargin-bottom: 2px;\npadding: 0px 10px;\nmin-width: 85px;\ncursor: pointer; list-style-type: none;\n}\n.bulletinMenu li:last-child{\nmargin-bottom: 0;\n}\n.settings li:hover{\nbackground: rgb(128, 128, 128);\n}\n.settings li i{\npadding-right: 8px;\n}",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "6dbedac851d8db69"
            ]
        ]
    },
    {
        "id": "a904c240fb3f52bd",
        "type": "template",
        "z": "41d1b8798efe7e15",
        "d": true,
        "name": "Main",
        "field": "payload.script",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "plain",
        "template": "\n/////////////\n/// #1 : Query selectors + start\n////////////\nconst commandList = document.querySelector(\".commandList\"),\n\n    buttonAdd_launch = document.querySelector(\".button#launch\"),\n    buttonAdd_goto = document.querySelector(\".button#goto\"),\n    buttonAdd_click = document.querySelector(\".button#click\"),\n    buttonAdd_type = document.querySelector(\".button#type\"),\n    buttonAdd_select = document.querySelector(\".button#select\"),\n    buttonAdd_get = document.querySelector(\".button#get\"),\n    buttonAdd_wait = document.querySelector(\".button#wait\"),\n    buttonAdd_close = document.querySelector(\".button#close\"),\n\n    cmdInput = document.querySelector(\".cmd\"),\n    textarea = document.querySelector('.textarea'),\n    lineNumbers = document.querySelector('.line-numbers');\n\nconst storageName = \"pupControl_JSON_commandGen\";\n\n///\n// Start ()\n\nlet commands = [];\ntry {\n    commands = JSON.parse(localStorage.getItem(storageName));\n}\ncatch {\n    console.log(\"Found command list, but corrupt:\\n\" + localStorage.getItem(storageName));\n}\nShowCommandList();\nUpdateJSON();\n\n\n\n\n\n\n\n\n\n\n\n/////////////\n/// #2 : Data manipulation\n////////////\n\n///\n// Add command\n\nvar variableCount = 0;\nfunction AddCommand(type, parameters = \"\") {\n\n    // Check if command is of valid type\n    if (!IsValidType(type)) {\n        console.log(\"Failed to add command of unknown type `\" + type + \"`\");\n        return;\n    }\n\n    // Check if a command array already exists, otherwise define it\n    commands = !commands ? [] : commands;\n\n    // Create initial command object\n    var command = {\n        \"action\": type\n    };\n\n    // Check parameters\n    var multipleParameters = parameters.split(' ');\n    var splitParameters = parameters.split('=');\n\n    // Add parameter values depending on command type\n    switch (type) {\n\n        // launch name (parameters)\n        case \"launch\":\n            if (parameters == \"\") break;\n            if (parameters == \"-debug\" || parameters == \"-d\") {\n                command.parameters = {\n                    \"headless\": false,\n                    \"slowMo\": 50,\n                    \"ignoreHTTPSErrors\": true,\n                    \"defaultViewport\": null\n                }\n            }\n            else\n                command.name = multipleParameters.length > 1 ? multipleParameters[0] : parameters;\n            break;\n\n        // goto url\n        case \"goto\":\n            command.url = ReturnUrl(parameters);\n            break;\n\n        // click element clickCount\n        case \"click\":\n            var clickCount = 0;\n            if (parseInt(multipleParameters[multipleParameters.length - 1], clickCount)) {\n                command.parameters = {};\n                command.parameters.clickCount = parseInt(multipleParameters[multipleParameters.length - 1]);\n                let remainingParameters = parameters.replace(multipleParameters[multipleParameters.length - 1], \"\");\n                command.path = GenerateSelector(remainingParameters);\n            } else\n                command.path = GenerateSelector(parameters);\n            break;\n\n        // type text element\n        case \"type\":\n            if (multipleParameters.length >= 2) {\n                let text = multipleParameters[0];\n                let _parameters = parameters.replace(text, '');\n                command.input = text;\n                command.path = GenerateSelector(_parameters);\n            }\n            else {\n                command.input = \"\";\n                command.path = \"\";\n            }\n            break;\n\n        // select element=selection\n        case \"select\":\n            if (splitParameters.length > 1) {\n                command.path = splitParameters[0];\n                command.input = splitParameters[1];\n            }\n            else {\n                command.path = \"\";\n                command.input = \"\";\n            }\n            break;\n\n        // get variable=element // get element\n        case \"get\":\n            //let split = parameters.split('=');\n            if (splitParameters.length > 1) {\n                command.name = splitParameters[0];\n                command.path = GenerateSelector(splitParameters[1]);\n            }\n            else if (parameters != null) {\n                command.name = \"variable_\" + variableCount++;\n                command.path = GenerateSelector(parameters);\n            }\n            else {\n                command.name = \"variable_\" + variableCount++;\n                command.path = \"\";\n            }\n            break;\n\n        // wait ms\n        case \"wait\":\n            if (parameters != null && parameters != \"\")\n                command.ms = parameters;\n            else command.ms = 1000;\n            break;\n\n    }\n\n    // Push new command to list, and store JSON\n    commands.push(command);\n    StoreAndUpdateJSON();\n\n    if (type == \"launch\")\n        SetAddCommandButtonsActive();\n}\n\n// Function to check if type is valid\nfunction IsValidType(type) {\n    switch (type) {\n        case \"launch\": case \"goto\": case \"click\": case \"type\": case \"select\": case \"get\": case \"wait\": case \"close\":\n            return true;\n\n        default:\n            return false;\n    }\n}\n\n// HTTP encode + add https if missing\nfunction ReturnUrl(url) {\n    var newUrl = encodeURIComponent(url);\n    if (!(url.includes(\"https://\") || url.includes(\"http://\")))\n        newUrl = \"https://\" + newUrl;\n    return newUrl;\n}\n\n// Selector generator from object path definition\nfunction GenerateSelector(parameters) {\n    var multipleParameters = parameters.trim().split(' ');\n    var path = multipleParameters[0];\n    if (multipleParameters.length == 1)\n        return path;\n\n    for (let i = 1; i < multipleParameters.length; i++) {\n        let _c = multipleParameters[i];\n        var insideBrackets = _c.includes('[');\n\n        let attrSplit = _c.split('=');\n        if (!insideBrackets && attrSplit.length == 2) {\n            let attr = (_c.split('='))[0];\n            let value = (_c.split('='))[1];\n            path += '[' + attr + '=\"' + value + '\"]';\n        }\n        else\n            path += \" \" + _c;\n    }\n    return path;\n}\n\n// Receive update variable command from event\nfunction UpdateCommandVar(inputField) {\n    let id = inputField.id;\n    let s = id.split('_');\n    let _id = s[1];\n    var _attr = s[2];\n    if (s.length > 3)\n        _attr += \".\" + s[3];\n    UpdateCommandValue(_attr, inputField.value, _id);\n}\n\n// Update and store the change\nfunction UpdateCommandValue(attr, value, commandId) {\n    if (attr == \"path\")\n        value = GenerateSelector(value);\n\n    if (attr.includes('.')) {\n        let s = attr.split(\".\");\n\n        if (((commands[commandId])[s[0]])[s[1]] != null)\n            ((commands[commandId])[s[0]])[s[1]] = value;\n\n    }\n    else\n        if ((commands[commandId])[attr] != null)\n            (commands[commandId])[attr] = value;\n\n    StoreAndUpdateJSON();\n}\n\n// Additional functions\n\nfunction ClearAllCommands() {\n    commands.splice(0, commands.length);\n    StoreAndUpdateJSON();\n    SetAddCommandButtonsActive(false);\n}\n\nfunction DeleteCommand(deleteId) {\n    commands.splice(deleteId, 1);\n    StoreAndUpdateJSON();\n\n    if (commands.length == 0)\n        SetAddCommandButtonsActive(false);\n}\n\nfunction CopyCommand(copyId) {\n    let command = commands[copyId];\n    commands.push(command);\n    StoreAndUpdateJSON();\n}\n\nfunction AddCommandAttribute(attr, commandId) {\n    attr = attr.remove('.');\n    if ((commands[commandId])[attr] == null)\n        (commands[commandId])[attr] = \"\";\n\n    StoreAndUpdateJSON();\n}\n\n///\n// STORE DATA / UPDATE JSON\n\nfunction StoreAndUpdateJSON(_text = null) {\n\n    let text = UpdateJSON(_text);\n\n    if (text != null)\n        localStorage.setItem(storageName, text);\n\n    ShowCommandList();\n}\nfunction UpdateJSON(_text = null) {\n\n    var text = null;\n\n    if (_text == null) {\n        text = JSON.stringify(commands);\n        SetTextareaText(text);\n    }\n\n    else {\n\n        var _parsed = null;\n        try { _parsed = JSON.parse(_text) }\n        catch { }\n        //console.log(\"Updating JSON from textarea!\");\n        //console.log(_parsed);\n        if (_parsed != null) {\n            commands = _parsed;\n            text = JSON.stringify(commands);\n        }\n\n    }\n\n    SetTextareLineNumbers();\n    return text;\n}\n\n\n\n\n\n\n\n\n\n/////////////\n/// #3 : Visual manipulation\n////////////\n\nfunction ShowCommandList() {\n    let liTag = \"\";\n\n    // Check if command list exists and is populated\n    if (commands) {\n        commands.forEach((command, id) => {\n            liTag += PrintCommand(command, id);\n        });\n    }\n\n    // Base text - if no commands exists\n    commandList.innerHTML = liTag || `<span>Start by adding a <b>Launch</b> command</span>`;\n\n    // Add event listeners to all input fields in tasks\n    var inputFields = document.querySelectorAll('.task input');\n    for (var i = 0; i < inputFields.length; i++) {\n\n        // Update the command that has been changed on focusout, and resize input field to match content\n        inputFields[i].addEventListener('focusout', function (event) {\n            UpdateCommandVar(event.target);\n            ResizeInputToFit(event.target.id);\n        }, false);\n\n        inputFields[i].addEventListener('keyup', function (event) {\n            // Also resize on key-up\n            ResizeInputToFit(event.target.id);\n        }, false);\n\n        // Also resize immediately to match loaded content\n        ResizeInputToFit(inputFields[i].id);\n    }\n\n    // Set add command buttons active\n    buttonAdd_launch.classList.add(\"active\");\n    if (commands)\n        if (commands.length > 0)\n            SetAddCommandButtonsActive();\n}\n\n// Show bulletin menu for each action in list (with copy / delete options)\nfunction ShowBulletinMenu(selectedTask) {\n    let menuDiv = selectedTask.parentElement.lastElementChild;\n    menuDiv.classList.add(\"show\");\n    document.addEventListener(\"click\", e => {\n        if (e.target.tagName != \"I\" || e.target != selectedTask)\n            menuDiv.classList.remove(\"show\");\n    });\n}\n\n///\n// PRINT COMMAND\n///\nfunction PrintCommand(command, id) {\n    var commandName = command.action == \"goto\" ? \"go to\" : command.action;\n    //for (const key in command) console.log(\"Key:\" + key + \": \" + command[key]);\n    var returnStr = \"\";\n    returnStr += `\n                <li class=\"task\" id=\"task_${id}\">\n                <div>\n                    <div>\n                        <label for=\"${id}\">\n                            <p>${commandName}</p>\n                        </label>\n                    </div>`;\n    // Add input fields for each object variable\n    returnStr += AddInputFields(command, id);\n    returnStr += `\n                    <div>\n                    </div>\n                    <div class=\"filler\"></div>\n                    <div class=\"settings\">\n                        <i onclick=\"ShowBulletinMenu(this)\" class=\"uil uil-ellipsis-h\"></i>\n                        <ul class=\"bulletinMenu\">\n                            <li onclick='CopyCommand(${id})'><i class=\"uil uil-trash\"></i>Copy</li>\n                            <li onclick='DeleteCommand(${id})'><i class=\"uil uil-trash\"></i>Delete</li>\n                        </ul>\n                    </div>\n                </div>\n            </li>`;\n    return returnStr;\n}\n\n// Add input fields for each command variable\nfunction AddInputFields(command, id, previousKey = null) {\n    var returnStr = \"\";\n    for (const key in command) {\n        var keystr = key;\n        keystr = key.toLocaleLowerCase();\n\n        if (command[key] !== null && typeof command[key] === 'object') {\n            returnStr += \"<span>\" + key + \" {</span>\";\n            returnStr += AddInputFields(command[key], id, key);\n            returnStr += \"<span>}</span>\";\n        }\n\n        else if (keystr != \"action\") {\n            let inputID = \"commandInput_\" + id + \"_\" + (previousKey != null ? previousKey + \"_\" : \"\") + key;\n            //inputIDArray.push(inputID);\n            returnStr += `\n                    <div>\n                    ${keystr}\n                    <input id=\"${inputID}\" value='${command[key]}'/>\n                    </div>\n                        `;\n        }\n\n    }\n    return returnStr;\n}\n\nfunction SetAddCommandButtonsActive(bool = true) {\n    if (bool) {\n        buttonAdd_launch.classList.remove(\"active\");\n        buttonAdd_goto.classList.add(\"active\");\n        buttonAdd_click.classList.add(\"active\");\n        buttonAdd_type.classList.add(\"active\");\n        buttonAdd_select.classList.add(\"active\");\n        buttonAdd_get.classList.add(\"active\");\n        buttonAdd_wait.classList.add(\"active\");\n        buttonAdd_close.classList.add(\"active\");\n    }\n    else {\n        buttonAdd_launch.classList.add(\"active\");\n        buttonAdd_goto.classList.remove(\"active\");\n        buttonAdd_click.classList.remove(\"active\");\n        buttonAdd_type.classList.remove(\"active\");\n        buttonAdd_select.classList.remove(\"active\");\n        buttonAdd_get.classList.remove(\"active\");\n        buttonAdd_wait.classList.remove(\"active\");\n        buttonAdd_close.classList.remove(\"active\");\n    }\n}\n\nfunction ResizeInputToFit(id) {\n    let _inputField = document.querySelector((\"#\" + id));\n    let width = (40 + (_inputField.value.length * 7.35)) + \"px\";\n    document.querySelector((\"#\" + id)).setAttribute('style', 'width:' + width);\n}\n\nvar lastChar = '';\nvar isNewline = false;\nvar isInsideQuotations = false;\nfunction SetTextareaText(json) {\n    var text = \"\";\n    let count = json.length;\n    var level = 0;\n\n    for (let i = 0; i < count; i++) {\n        let char = json[i];\n\n        switch (char) {\n            case '{': case '[':\n                if (!isInsideQuotations && i != 0 && (json[i - 1] == ',' || json[i - 1] == ':')) text += \"\\n\";\n                if (!isInsideQuotations)\n                    for (let l = 0; l < level; l++)\n                        text += \"\\t\";\n                text += char;\n                if (!isInsideQuotations) {\n                    text += \"\\n\";\n                    level++;\n                    isNewline = true;\n                }\n                break;\n\n            case '}': case ']':\n                if (!isInsideQuotations) {\n                    text += \"\\n\";\n                    level--;\n                    for (let l = 0; l < level; l++)\n                        text += \"\\t\";\n                    isNewline = true;\n                }\n                text += char;\n                break;\n\n            case ',':\n                if (!isInsideQuotations)\n                    isNewline = true;\n                text += char;\n                break;\n\n            case ':':\n                text += char;\n                if (lastChar == \"\\\"\")\n                    text += \" \";\n                break;\n\n            case '\"':\n                isInsideQuotations = !isInsideQuotations;\n\n            default:\n                if (i != 0 && json[i - 1] == ',') { text += \"\\n\"; isNewline = true }\n                if (isNewline)\n                    for (let l = 0; l < level; l++)\n                        text += \"\\t\";\n                text += char;\n                isNewline = false;\n                break;\n        }\n\n        lastChar = char;\n    }\n\n    textarea.value = text;\n}\n\nfunction SetTextareLineNumbers() {\n    const numberOfLines = textarea.value.split('\\n').length;\n    lineNumbers.innerHTML = Array(numberOfLines)\n        .fill('<span></span>')\n        .join('');\n}\n\n\n\n\n\n\n\n\n\n\n\n/////////////\n/// #4 : Communication (HTTP Request + Websockets)\n////////////\n\n///\n// HTTP post method (for testing flows using \"nr\"-command)\nasync function SendToNodeRed() {\n    if (commandList.length == 0)\n        return;\n\n    document.getElementById('task_0').classList.add(\"current\");\n\n    fetch('/puprun', {\n\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: textarea.value\n\n    }).then(response => {\n        if (response.ok) {\n            response.json().then(json => {\n                console.log(json);\n            });\n        }\n    });\n}\n\n///\n// WEB SOCKET (node-red)\nvar ws;\nvar wsUri = \"ws:\";\nvar loc = window.location; //console.log(loc);\n\nif (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n// This needs to point to the web socket in the Node-RED flow\nwsUri += \"//\" + loc.host + loc.pathname.replace(\"pup\", \"ws/pup\");\n\nfunction wsConnect() {\n    console.log(\"Connecting to \", wsUri);\n    ws = new WebSocket(wsUri);\n    //var line = \"\";    // either uncomment this for a building list of messages\n    ws.onmessage = function (msg) {\n        var line = \"\";  // or uncomment this to overwrite the existing message\n\n        // parse the incoming message as a JSON object\n        var data = msg.data;\n        const obj = JSON.parse(data);\n\n        console.log(\"Received WS message ID: \" + obj.pupid);\n\n        // Remove bg from current command box (and set error if error was detected)\n        document.getElementById('task_' + obj.pupid).classList.remove(\"current\")\n        if (!obj.succesful)\n            document.getElementById('task_' + obj.pupid).classList.add(\"error\")\n\n        // Update next command box bg\n        let nextID = obj.pupid + 1;\n        if (commands.length > nextID)\n            document.getElementById('task_' + nextID).classList.add(\"current\");\n\n        //ws.send(JSON.stringify({data:data}));\n    }\n    ws.onopen = function () {\n        // update the status div with the connection status\n        console.log(\"Connected to WS\");\n    }\n    ws.onclose = function () {\n        // update the status div with the connection status\n        console.log(\"WS connection lost\");\n        // in case of lost connection tries to reconnect every 3 secs\n        setTimeout(wsConnect, 3000);\n    }\n}\nfunction PublishWsMessage(m) {\n    if (ws) { ws.send(m); }\n}\n\n\n\n\n\n\n\n\n\n/////////////\n/// #5 : Command line interface\n////////////\n\nfunction RunCommandLineAction(key) {\n    if (key != \"Enter\")\n        return;\n\n    var input = cmdInput.value;\n    input = input.toLowerCase();\n\n    const inputCommand = (input.split(' '))[0];\n\n    var clearInput = true;\n\n    switch (inputCommand) {\n        case \"clear\":\n            ClearAllCommands();\n            break;\n\n        case \"node-red\": case \"nr\":\n            SendToNodeRed();\n            break;\n\n        case \"add\":\n            let s = input.split(' '); let i1 = s[1], i2 = s[2];\n            AddCommandAttribute(i1, i2);\n            break;\n\n        case \"launch\": case \"goto\": case \"click\": case \"type\": case \"get\": case \"wait\": case \"close\":\n            AddCommandLineCommand(inputCommand, input);\n            break;\n\n        default:\n            console.log(\"Received unrecognized console command `\" + input + \"`\");\n            clearInput = false;\n            break;\n    }\n\n    if (clearInput)\n        cmdInput.value = \"\";\n}\n\nfunction AddCommandLineCommand(ic, i) {\n    const parameters = i.replace(ic, '').trim();\n    AddCommand(ic, parameters);\n\n    console.log(\"Received command `\" + ic + \"` with parameters `\" + parameters + \"`\");\n}\n\n\n\n\n\n\n\n\n\n/////////////\n/// #6 : Event listeners\n////////////\n\ntextarea.addEventListener('keyup', event => {\n    SetTextareLineNumbers();\n    StoreAndUpdateJSON(textarea.value);\n});\ncmdInput.addEventListener('keyup', event => {\n    RunCommandLineAction(event.key);\n});\ntextarea.addEventListener('keydown', event => {\n    if (event.key === 'Tab') {\n        const start = textarea.selectionStart;\n        //const end = textarea.selectionEnd;\n\n        textarea.value = textarea.value.substring(0, start) + '\\t' + textarea.value.substring(start, textarea.value.length);\n\n        textarea.selectionEnd = start + 1;\n\n        event.preventDefault();\n    }\n});\n\nbuttonAdd_launch.addEventListener(\"click\", () => {\n    AddCommand(\"launch\");\n});\nbuttonAdd_goto.addEventListener(\"click\", () => {\n    AddCommand(\"goto\");\n});\nbuttonAdd_click.addEventListener(\"click\", () => {\n    AddCommand(\"click\");\n});\nbuttonAdd_type.addEventListener(\"click\", () => {\n    AddCommand(\"type\");\n});\nbuttonAdd_select.addEventListener(\"click\", () => {\n    AddCommand(\"select\");\n});\nbuttonAdd_get.addEventListener(\"click\", () => {\n    AddCommand(\"get\");\n});\nbuttonAdd_wait.addEventListener(\"click\", () => {\n    AddCommand(\"wait\");\n});\nbuttonAdd_close.addEventListener(\"click\", () => {\n    AddCommand(\"close\");\n});",
        "x": 630,
        "y": 160,
        "wires": [
            [
                "ccd6ab4c66afb0c3"
            ]
        ]
    },
    {
        "id": "5c5841605bcac134",
        "type": "http response",
        "z": "41d1b8798efe7e15",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 160,
        "wires": []
    },
    {
        "id": "6dbedac851d8db69",
        "type": "template",
        "z": "41d1b8798efe7e15",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n    <meta charset=\"utf-8\">  \n    <title>PupController</title>\n    <style>{{{payload.style}}}</style>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <!-- Iconscout Link For Icons -->\n    <link rel=\"stylesheet\" href=\"https://unicons.iconscout.com/release/v4.0.0/css/line.css\">\n  </head>\n  <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n\n    <div class=\"flex\">\n\n      <div class=\"containerLeft\">\n\n        <div class=\"menu\">\n\n          <div class=\"menupoints\">\n            <div>Documentation</div>\n            <div>GitHub</div>\n          </div>\n\n          <div class=\"controls\">\n            <button class=\"button\" id=\"launch\">Launch</button>\n            <button class=\"button\" id=\"goto\">Go To</button>\n            <button class=\"button\" id=\"click\">Click</button>\n            <button class=\"button\" id=\"type\">Type</button>\n            <button class=\"button\" id=\"select\">Select</button>\n            <button class=\"button\" id=\"get\">Get</button>\n            <button class=\"button\" id=\"wait\">Wait</button>\n            <button class=\"button\" id=\"close\">Close</button>\n          </div>\n\n        </div>\n\n        <ul class=\"commandList\"></ul>\n\n      </div>\n      <div class=\"containerRight\">\n\n        <div class=\"editor\">\n          <div class=\"line-numbers\">\n            <span></span>\n          </div>\n          <textarea class=\"textarea\"></textarea>\n        </div><!-- /editor -->\n\n      </div><!-- /containerRight -->\n    </div><!-- /flex -->\n\n\n\n    <div class=\"commandLine\">\n      <span>></span><input class=\"cmd\" />\n    </div>\n\n\n<script>{{{payload.script}}}</script>\n\n  </body>\n</html>",
        "x": 970,
        "y": 160,
        "wires": [
            [
                "5c5841605bcac134"
            ]
        ]
    },
    {
        "id": "f8ccfed64d837464",
        "type": "comment",
        "z": "41d1b8798efe7e15",
        "name": "Set URL",
        "info": "",
        "x": 400,
        "y": 120,
        "wires": []
    },
    {
        "id": "5b841495c9c84c66",
        "type": "comment",
        "z": "41d1b8798efe7e15",
        "name": "Host website",
        "info": "",
        "x": 150,
        "y": 120,
        "wires": []
    },
    {
        "id": "f38a2efe43edd64e",
        "type": "change",
        "z": "41d1b8798efe7e15",
        "name": "url = /pup",
        "rules": [
            {
                "t": "set",
                "p": "url",
                "pt": "msg",
                "to": "pup",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 160,
        "wires": [
            [
                "a904c240fb3f52bd",
                "e271c933dcfb52c5"
            ]
        ]
    },
    {
        "id": "8646ac73ab639fcd",
        "type": "http in",
        "z": "41d1b8798efe7e15",
        "name": "",
        "url": "/puprun",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "0fa8b45a3aec3fd5"
            ]
        ]
    },
    {
        "id": "d68baf48942491dd",
        "type": "switch",
        "z": "41d1b8798efe7e15",
        "name": "browser == null?",
        "property": "pupController.browser",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "nnull"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 340,
        "wires": [
            [
                "274738f45a0d5d5a"
            ],
            [
                "1a32f920705bb1bc"
            ]
        ]
    },
    {
        "id": "274738f45a0d5d5a",
        "type": "change",
        "z": "41d1b8798efe7e15",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pupController",
                "pt": "msg",
                "to": "{\t    \"pages\": [],\t    \"commands\": payload\t}",
                "tot": "jsonata"
            },
            {
                "t": "set",
                "p": "pupCount",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 320,
        "wires": [
            [
                "1a32f920705bb1bc"
            ]
        ]
    },
    {
        "id": "1a32f920705bb1bc",
        "type": "function",
        "z": "41d1b8798efe7e15",
        "name": "Initialize?",
        "func": "const pup = global.get('puppeteer');\n(async () => {\n\n    var commands = msg.pupController.commands;\n\n    for (let i = 0; i < commands.length; i++)\n    {\n        const e = commands[i];\n\n        if (msg.pupController.browser == null && e.action == \"launch\")\n        {\n            msg.pupController.browser = await pup.launch(e.parameters);\n            msg.pupController.browserWS = await msg.pupController.browser.wsEndpoint();\n            //await NewPage(e.name != null ? e.name : \"main\");\n            await AddInitialPage(e.name != null ? e.name : \"initial\");\n        }\n\n        else if(e.action == \"newtab\")\n            await NewPage(e.name);\n    }\n\n    if(msg.pupController.browser == null)\n    {\n        msg.pupController.browser = await pup.launch({});\n        msg.pupController.browserWS = await msg.pupController.browser.wsEndpoint();\n    }\n\n    msg.pupController.activePage = 0; //((await (msg.pupController.browser.pages()).length) - 1);\n    /*\n    {\n        \"page\": (await msg.pupController.browser.pages())[(await msg.pupController.browser.pages()).length - 1],\n        \"po\":msg.pupController.pages[msg.pupController.pages.length - 1]\n    }*/\n    node.send(msg);\n})();\n\nasync function NewPage(name) {\n    const newPage = await msg.pupController.browser.newPage();\n    const id = (await msg.pupController.browser.pages()).length - 1;\n    const url = await newPage.url();\n    msg.pupController.pages.push(\n        {\n            \"name\": name,\n            \"id\": id,\n            \"url\": url\n        });\n}\n\nasync function AddInitialPage(name = \"initial\")\n{\n    const page = (await msg.pupController.browser.pages())[0];\n    const url = await page.url();\n    msg.pupController.pages.push(\n        {\n            \"name\": name,\n            \"id\": 0,\n            \"url\": url\n        });\n}\n\n/*\nasync function LaunchBrowser(e)\n{\n    const browser = await pup.launch(e.parameters);\n    return browser.wsEndpoint();\n}\n*/",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 380,
        "wires": [
            [
                "580a9e3166314a22"
            ]
        ]
    },
    {
        "id": "580a9e3166314a22",
        "type": "function",
        "z": "41d1b8798efe7e15",
        "name": "Solo Controller",
        "func": "const pup = global.get('puppeteer');\nconst path = global.get('path');\nconst downloadPath = path.resolve('./download');\n\nvar actions = [];\n//var outputs = [];\nvar outputs = {};\n\nconst timeoutMs = 10000;\n\n(async () => {\n\n    const actionList = msg.payload;\n    var actionPerformed;\n\n    for (let i = 0; i < actionList.length; i++) {\n        \n        try {\n            const browser = await pup.connect({ \"browserWSEndpoint\": msg.pupController.browserWS })\n            const page = (await browser.pages())[msg.pupController.activePage];\n            //page.setDefaultNavigationTimeout(10000);\n\n            var ele = actionList[i];\n            const action = ele.action;\n\n            await page.waitForNetworkIdle();\n\n            switch (action)\n            {\n                case \"launch\":\n                case \"newtab\":\n                    break;\n\n                case \"goto\":\n                    if (ele.url != null)\n                        await page.goto(ele.url, { waitUntil: 'load', timeout: timeoutMs });\n                    else\n                        actionPerformed = ReportError(ele, \"Error: URL was lost\");\n                    break;\n\n                case \"click\":\n                    if(ele.isDownload == true || ele.isDownload == \"true\")\n                        setDownloadBehavior(page);\n                    await page.waitForSelector(ele.path, { waitUntil: 'domcontentloaded', timeout: timeoutMs });\n                    await page.click(ele.path, (ele.parameters != null ? ele.parameters : {}));\n                    if (ele.isDownload == true || ele.isDownload == \"true\")\n                        await page.waitForNetworkIdle();\n                    break;\n\n                case \"type\":\n                    await page.waitForSelector(ele.path, { waitUntil: 'domcontentloaded', timeout: timeoutMs });\n                    if (ele.clear == true || ele.clearInput == true || ele.clear == \"true\" || ele.clearInput == \"true\")\n                        await page.click(ele.path, { clickCount: 3 });\n                    await page.type(ele.path, ele.input);\n                    break;\n\n                case \"select\":\n                    let elemHandler = await page.$(ele.path);\n                    let properties = await elemHandler.getProperties();\n                    for (const property of properties.values()) {\n                        const element = property.asElement();\n                        if (element) {\n                            let hText = await element.getProperty(\"text\");\n                            let text = await hText.jsonValue();\n                            if (text === ele.input) {\n                                let hValue = await element.getProperty(\"value\");\n                                let value = await hValue.jsonValue();\n                                await page.select(ele.path, value); // or use 58730\n                                console.log(`Selected ${text} which is value ${value}.`);\n                            }\n                        }\n                    }\n/*\n                    await page.waitForSelector(ele.path, { waitUntil: 'domcontentloaded', timeout: timeoutMs });\n                    await page.select(ele.path, ele.input);*/\n                    break;\n\n\n                case \"get\":\n                    await page.waitForSelector(ele.path, { waitUntil: 'domcontentloaded', timeout: timeoutMs });\n                    var content = await page.$eval(ele.path, el => el.innerText);\n                    ele.output = actionList[i].output = content;\n                    break;\n\n                case \"wait\":\n                    if(ele.ms != null)\n                        await wait(ele.ms);\n                    break;\n\n                case \"close\":\n                    await browser.close();\n                    msg.pupController.browser = null;\n                    msg.pupController.pages = null;\n                    break;\n            }\n\n            ele.succesful = true;\n            actionPerformed = ReportAction(ele);\n            node.send([null, actionPerformed]);\n\n            //if(i == actionList.length-1 && action != \"close\")\n            //    await browser.close();\n            \n            \n        }\n        catch (e)\n        {\n            console.log(\"PupController error: \" + JSON.stringify(e));\n            //node.error(\"Error:\", e);\n            actionList[i].succesful = false;\n            actionPerformed = ReportError(actionList[i], e);\n            node.send([null, actionPerformed]);\n\n            /*if (i == actionList.length - 1 && actionList[i] != \"close\")\n                await pup.connect({ \"browserWSEndpoint\": msg.pupController.browserWS }).then(browser => browser.close());\n                //await browser.close();*/\n        }\n\n    }\n\n    msg.pupOutputs = outputs;\n    node.send([msg, null]);\n})();\n\nasync function wait(_ms)\n{\n    let promise = new Promise((resolve, reject) => {\n        setTimeout(() => resolve(\"done!\"), _ms)\n    });\n    let result = await promise; // wait until the promise resolves (*)\n    //alert(result); // \"done!\"\n}\n\nfunction ReportAction(a, s = true)\n{\n    var newAction;\n    actions.push(newAction = {\n        \"action\": a.action,\n        \"succesful\": s,\n        \"obj\": a\n    });\n\n    if(a.output != null)\n    {\n        var outputName = a.name;\n        var outputObj = a.obj;\n\n        if(outputObj != null && outputObj != \"\")\n        {\n            outputs[outputObj] = outputs[outputObj] == null ? {} : outputs[outputObj];\n            outputs[outputObj][outputName] = a.output;\n        }\n        else\n            outputs[outputName] = a.output;\n        /*\n        outputs.push({\n            \"name\": a.name,\n            \"value\": a.output\n        });*/\n    }\n    return newAction;\n}\n\nfunction ReportError(a, e)\n{\n    console.log(e);\n    var newAction;\n    actions.push(newAction = {\n        \"action\": a,\n        \"succesful\": false,\n        \"error\": e,\n        \"obj\": a\n    });\n    return newAction;\n}\n\nasync function setDownloadBehavior(page) {\n    const client = await page.target().createCDPSession();\n    await client.send('Page.setDownloadBehavior', {\n        behavior: 'allow',\n        downloadPath: downloadPath\n    });\n}\n\n\n\n\n\n\n/*\n(async () => {\n    if (msg.command.url != null)\n        try {\n            //const browser = await pup.connect({ \"browserWSEndpoint\": msg.pupController.browserWS })\n            const browser = await pup.connect({ \"browserWSEndpoint\": msg.browserWS })\n            //const page = (await browser.pages())[msg.pupController.activePage];\n            const page = (await browser.pages())[msg.activePage];\n\n            await page.waitForNetworkIdle();\n            await page.goto(msg.command.url);\n            msg.succesful = true;\n\n        }\n        catch (e) {\n            console.log(e);\n            msg.succesful = false;\n            msg.error = e;\n        }\n    else {\n        msg.succesful = false;\n        msg.error = \"Error: URL was null\";\n        console.log(msg.error);\n    }\n\n    node.send(msg);\n})();\n*/",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 360,
        "wires": [
            [
                "cb4ea3ccf7541c86",
                "668e1ae3f9c4ccf8"
            ],
            [
                "2fd098a8190ef089"
            ]
        ]
    },
    {
        "id": "fa696e728e31ff49",
        "type": "comment",
        "z": "41d1b8798efe7e15",
        "name": "Start flow from web",
        "info": "",
        "x": 170,
        "y": 300,
        "wires": []
    },
    {
        "id": "a0f636581c44be9d",
        "type": "debug",
        "z": "41d1b8798efe7e15",
        "name": "Command Executed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 500,
        "wires": []
    },
    {
        "id": "69738f2e4dcc6f63",
        "type": "http response",
        "z": "41d1b8798efe7e15",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1750,
        "y": 300,
        "wires": []
    },
    {
        "id": "668e1ae3f9c4ccf8",
        "type": "debug",
        "z": "41d1b8798efe7e15",
        "name": "All Commands Executed",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1630,
        "y": 240,
        "wires": []
    },
    {
        "id": "2fd098a8190ef089",
        "type": "change",
        "z": "41d1b8798efe7e15",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "pupid",
                "pt": "msg",
                "to": "pupCount",
                "tot": "flow"
            },
            {
                "t": "set",
                "p": "pupCount",
                "pt": "flow",
                "to": "msg.pupid+1",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1600,
        "y": 420,
        "wires": [
            [
                "5935cece6c345653"
            ]
        ]
    },
    {
        "id": "8020507bdd5939ba",
        "type": "websocket out",
        "z": "41d1b8798efe7e15",
        "name": "",
        "server": "6e63b3c396c75d87",
        "client": "",
        "x": 1970,
        "y": 400,
        "wires": []
    },
    {
        "id": "9da2cdfaa3c63d2e",
        "type": "comment",
        "z": "41d1b8798efe7e15",
        "name": "Set JavaScript",
        "info": "",
        "x": 650,
        "y": 120,
        "wires": []
    },
    {
        "id": "3d490b929251bc8a",
        "type": "comment",
        "z": "41d1b8798efe7e15",
        "name": "Start flow from flow",
        "info": "",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "8ce8fe7e4e9fd6a5",
        "type": "comment",
        "z": "41d1b8798efe7e15",
        "name": "Endpoint",
        "info": "",
        "x": 1140,
        "y": 120,
        "wires": []
    },
    {
        "id": "30cc309628e939bc",
        "type": "comment",
        "z": "41d1b8798efe7e15",
        "name": "Check instance",
        "info": "",
        "x": 900,
        "y": 300,
        "wires": []
    },
    {
        "id": "6553bd482e86e7cd",
        "type": "function",
        "z": "41d1b8798efe7e15",
        "name": "CSS Selector Parser",
        "func": "for (let i = 0; i < msg.payload.length; i++) {\n    const e = msg.payload[i];\n\n    if(e.element != null)\n        e.path = CreatePath(e.element);\n    //DebugElement(e.element);\n    \n}\n\nfunction DebugElement(element)\n{\n    msg.test.push(element);\n}\n\nfunction CreatePath(element)\n{\n    if(element.path != null)\n        element.path;\n\n    var path = element.type == null ? \"\" : element.type;\n\n    if(element.parent != null && element.within != null)\n        ReportError({\n            \"error\": \"Both parent and within values set for element\",\n            \"element\": element\n        });\n\n    if(element.class != null)\n        path = path + \".\" + element.class;\n\n        if (element.classContains != null)\n            path = path + \"[class*='\" + element.classContains + \"']\";\n\n        if (element.classStartsWith != null)\n            path = path + \"[class^='\" + element.classStartsWith + \"']\";\n\n    if (element.id != null)\n        path = path + \"[id='\" + element.id + \"']\";\n\n        if(element.idContains != null)\n            path = path + \"[id*='\" + element.idContains + \"']\";\n\n        if (element.idStartsWith != null)\n            path = path + \"[id^='\" + element.idStartsWith + \"']\";\n\n    if (element.name != null)\n        path = path + \"[name='\" + element.name + \"']\";\n\n    if (element.src != null)\n        path = path + \"[src='\" + element.src + \"']\";\n\n    if (element.innerHTML != null)\n        path = path + \"[innerHTML='\" + element.innerHTML + \"']\";\n\n    // Check parent + within\n\n    if(element.parent != null)\n        path = CreatePath(element.parent) + \" > \" + path;\n    \n    else if (element.within != null)\n        path = CreatePath(element.within) + \" \" + path;\n\n    return path;\n}\n\nfunction ReportError(error)\n{\n    msg.error = error;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 340,
        "wires": [
            [
                "d68baf48942491dd"
            ]
        ]
    },
    {
        "id": "5b02768458131405",
        "type": "comment",
        "z": "41d1b8798efe7e15",
        "name": "Create CSS selectors",
        "info": "",
        "x": 680,
        "y": 300,
        "wires": []
    },
    {
        "id": "0fa8b45a3aec3fd5",
        "type": "change",
        "z": "41d1b8798efe7e15",
        "name": "isWebCommand = true",
        "rules": [
            {
                "t": "set",
                "p": "isWebCommand",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 340,
        "wires": [
            [
                "6553bd482e86e7cd"
            ]
        ]
    },
    {
        "id": "5aa16189aff2b4c3",
        "type": "change",
        "z": "41d1b8798efe7e15",
        "name": "isWebCommand = false",
        "rules": [
            {
                "t": "set",
                "p": "isWebCommand",
                "pt": "flow",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 390,
        "y": 440,
        "wires": [
            [
                "6553bd482e86e7cd"
            ]
        ]
    },
    {
        "id": "5935cece6c345653",
        "type": "switch",
        "z": "41d1b8798efe7e15",
        "name": "",
        "property": "isWebCommand",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1770,
        "y": 420,
        "wires": [
            [
                "8020507bdd5939ba"
            ],
            []
        ]
    },
    {
        "id": "cb4ea3ccf7541c86",
        "type": "switch",
        "z": "41d1b8798efe7e15",
        "name": "",
        "property": "isWebCommand",
        "propertyType": "flow",
        "rules": [
            {
                "t": "eq",
                "v": "true",
                "vt": "jsonata"
            },
            {
                "t": "eq",
                "v": "false",
                "vt": "jsonata"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1570,
        "y": 320,
        "wires": [
            [
                "69738f2e4dcc6f63"
            ],
            []
        ]
    },
    {
        "id": "9b6f2743d9f9c4c2",
        "type": "catch",
        "z": "41d1b8798efe7e15",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 200,
        "y": 660,
        "wires": [
            [
                "9eb94ead2cba83a2"
            ]
        ]
    },
    {
        "id": "9eb94ead2cba83a2",
        "type": "debug",
        "z": "41d1b8798efe7e15",
        "name": "PupError",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 660,
        "wires": []
    },
    {
        "id": "e271c933dcfb52c5",
        "type": "template",
        "z": "41d1b8798efe7e15",
        "name": "Main",
        "field": "payload.script",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "plain",
        "template": "/////////////\n/// #0 : Action definitions\n////////////\n\nfunction actionList() {\n    return [\n        {\n            \"action\": \"launch\",\n            \"parameters\":\n            {\n                \"headless\": false,\n                \"slowMo\": 50,\n                \"ignoreHTTPSErrors\": true,\n                \"defaultViewport\": null\n            }\n        },\n        {\n            \"action\": \"goto\",\n            \"url\": \"\"\n        },\n        {\n            \"action\": \"click\",\n            \"path\": \"\",\n            \"parameters\":\n            {\n                \"clickCount\": 1\n            }\n        },\n        {\n            \"action\": \"type\",\n            \"input\": \"\",\n            \"path\": \"\"\n        },\n        {\n            \"action\": \"select\",\n            \"path\": \"\",\n            \"input\": \"\"\n        },\n        {\n            \"action\": \"get\",\n            \"name\": \"\",\n            \"path\": \"\"\n        },\n        {\n            \"action\": \"wait\",\n            \"ms\": 1000\n        },\n        {\n            \"action\": \"close\"\n        }\n    ];\n};\n\n\n/////////////\n/// #1 : Start ()\n////////////\n\nconst commandList = document.querySelector(\".commandList\"),\n    controls = document.querySelector(\".controls\"),\n\n    cmdInput = document.querySelector(\".cmd\"),\n    textarea = document.querySelector('.textarea'),\n    lineNumbers = document.querySelector('.line-numbers');\n\nconst storageName = \"pupControl_JSON_commandGen\";\n\n// Define + get commands from SQLite\n\nlet commands = [];\n\ntry {\n    commands = JSON.parse(localStorage.getItem(storageName));\n}\ncatch {\n    console.log(\"Found command list, but corrupt:\\n\" + localStorage.getItem(storageName));\n}\n\nShowCommandList();\nUpdateJSON();\n\n// Create pseudo enum \"actionKeys\" -> usage to get full object: actionList()[actionKeys[\"launch\"]]\n\nlet _actionKeys = [];\nfor (let i = 0; i < actionList().length; i++)\n    _actionKeys[actionList()[i].action] = i;\n\nconst actionKeys = _actionKeys;\n\n// Function to create IDs for query selection of buttons\n\nfunction GetElementIdFromAction(actionObject) { return \"buttonAdd_\" + actionObject.action.replace(\" \", \"\"); }  // Example ID: buttonAdd_launch\n\n// Dynamically instantiate buttons for action objects\n\nfor (let i = 0; i < actionList().length; i++)\n    controls.innerHTML += `\n        <button class=\"button active\" id=\"${GetElementIdFromAction(actionList()[i])}\">${actionList()[i].action}</button>\n    `;\n\n// Dynamically create query selectors for action object buttons\n\nlet _buttonAdd = [];\nfor (let i = 0; i < actionList().length; i++)\n    _buttonAdd[actionList()[i].action] = document.querySelector(\".button#\" + GetElementIdFromAction(actionList()[i]));\n\nconst buttonAdd = _buttonAdd;\n\n// and add event listeners\n\nfor (let i = 0; i < actionList().length; i++)\n    buttonAdd[actionList()[i].action].addEventListener(\"click\", () => {\n        AddCommand(actionList()[i]);\n    });\n\n\n\n\n\n\n/////////////\n/// #2 : Data manipulation\n////////////\n\n///\n// Add command\n\nlet variableCount = 0;\nfunction AddCommand(actionObject) {\n\n    //console.log(\"Received action object: \\n\" + JSON.stringify(actionObject));\n\n    //console.log(\"Full action list: \" + JSON.stringify(actionList));\n\n    // Check if command is of valid type\n    if (!IsValidType(actionObject.action)) {\n        console.log(\"Failed to add command of unknown type `\" + actionObject.action + \"`\");\n        return;\n    }\n\n    // Check if a command array already exists, otherwise define it\n    commands = !commands ? [] : commands;\n\n    // Create initial command object\n    let clone = {}; // the new empty object\n\n    // let's copy all action properties into it\n    for (let key in actionObject) {\n        clone[key] = actionObject[key];\n    }\n    const command = clone;\n\n    // Push new command to list, and store JSON\n    commands.push(command);\n\n    StoreAndUpdateJSON();\n}\n\n// Function to check if type is valid\nfunction IsValidType(type) {\n    return !(actionKeys[type] == null);\n}\n\n// HTTP encode + add https if missing\nfunction ReturnUrl(url) {\n    var newUrl = encodeURIComponent(url);\n    if (!(url.includes(\"https://\") || url.includes(\"http://\")))\n        newUrl = \"https://\" + newUrl;\n    return newUrl;\n}\n\n// Selector generator from string\nfunction GenerateSelector(parameters) {\n    var multipleParameters = parameters.trim().split(' ');\n    var path = multipleParameters[0];\n    if (multipleParameters.length == 1)\n        return path;\n\n    for (let i = 1; i < multipleParameters.length; i++) {\n        let _c = multipleParameters[i];\n        var insideBrackets = _c.includes('[');\n\n        let attrSplit = _c.split('=');\n        if (!insideBrackets && attrSplit.length == 2) {\n            let attr = (_c.split('='))[0];\n            let value = (_c.split('='))[1];\n            path += '[' + attr + '=\"' + value + '\"]';\n        }\n        else\n            path += \" \" + _c;\n    }\n    return path;\n}\n\n// Receive update variable command from event\nfunction UpdateCommandVar(inputField) {\n\n    // Get ID of input field to determine which value to update\n    let id = inputField.id;\n    let s = id.split('_');\n\n    // Example ID: obj_attr\n    let _id = s[1];\n    var _attr = s[2];\n    if (s.length > 3)\n        _attr += \".\" + s[3];\n\n    UpdateCommandValue(_attr, inputField.value, _id);\n}\n\n// Update and store the change\nfunction UpdateCommandValue(attr, value, commandId) {\n\n    if (attr == \"path\")\n        value = GenerateSelector(value);\n\n    // Parse if float or int (ignore if \"path\" or \"input\")\n    if (attr != \"path\" && attr != \"\") //  <- HARD CODE :(\n    {\n        if (value.includes(\".\") || value.includes(\",\")) {\n            // Is float?\n            let _value = value.replace(\",\", \".\");\n            const parsed = parseFloat(_value);\n            if (!isNaN(parsed))\n                value = parsed;\n        }\n        else {\n            // Is int?\n            const parsed = parseInt(value);\n            if (!isNaN(parsed))\n                value = parsed;\n        }\n\n        // Parse if boolean or null\n        if (value === \"true\") value = true;\n        if (value === \"false\") value = false;\n        if (value === \"null\") value = null;\n    }\n\n\n    if (attr.includes('.')) {\n        let s = attr.split(\".\");\n\n        console.log(\"Updating attr \" + attr + \" from value \" + ((commands[commandId])[s[0]])[s[1]] + \" to value \" + value + \" (id: \" + commandId + \")\");\n\n        //if (((commands[commandId])[s[0]])[s[1]] != undefined)\n        ((commands[commandId])[s[0]])[s[1]] = value;\n\n\n    }\n    else {\n        console.log(\"Updating attr \" + attr + \" from value \" + (commands[commandId])[attr] + \" to value \" + value + \" (id: \" + commandId + \")\");\n\n        //if ((commands[commandId])[attr] != undefined)\n        (commands[commandId])[attr] = value;\n\n    }\n\n    StoreAndUpdateJSON();\n}\n\n// Additional functions\n\nfunction ClearAllCommands() {\n    commands.splice(0, commands.length);\n    StoreAndUpdateJSON();\n}\n\nfunction DeleteCommand(deleteId) {\n    commands.splice(deleteId, 1);\n    StoreAndUpdateJSON();\n}\n\nfunction CopyCommand(copyId) {\n    let command = commands[copyId];\n    commands.push(command);\n    StoreAndUpdateJSON();\n}\n\n///\n// STORE DATA / UPDATE JSON\n\nfunction StoreAndUpdateJSON(_text = null) {\n\n    // Function is used with _text parameter when called from textarea event listener\n    let text = UpdateJSON(_text);\n\n    if (text != null)\n        localStorage.setItem(storageName, text);\n\n    ShowCommandList();\n}\n\nfunction UpdateJSON(_text = null) {\n\n    var text = null;\n\n    if (_text == null) {\n        text = JSON.stringify(commands);\n        SetTextareaText(text);\n    }\n\n    else {\n\n        var _parsed = null;\n        try { _parsed = JSON.parse(_text) }\n        catch { }\n        //console.log(\"Updating JSON from textarea!\");\n        //console.log(_parsed);\n        if (_parsed != null) {\n            commands = _parsed;\n            text = JSON.stringify(commands);\n        }\n\n    }\n\n    SetTextareLineNumbers();\n    return text;\n}\n\n\n\n\n\n\n\n\n\n/////////////\n/// #3 : Visual manipulation\n////////////\n\nfunction ShowCommandList() {\n    let liTag = \"\";\n\n    // Check if command list exists and is populated\n    if (commands) {\n        commands.forEach((command, id) => {\n            liTag += PrintCommand(command, id);\n        });\n    }\n\n    // Base text - if no commands exists\n    commandList.innerHTML = liTag || `<span>Start by adding a <b>Launch</b> command</span>`;\n\n    // Add event listeners to all input fields in tasks\n    var inputFields = document.querySelectorAll('.task input');\n    for (var i = 0; i < inputFields.length; i++) {\n\n        // Update the command that has been changed on focusout, and resize input field to match content\n        inputFields[i].addEventListener('focusout', function (event) {\n            UpdateCommandVar(event.target);\n            ResizeInputToFit(event.target.id);\n        }, false);\n\n        inputFields[i].addEventListener('keyup', function (event) {\n            // Also resize on key-up\n            ResizeInputToFit(event.target.id);\n        }, false);\n\n        // Also resize immediately to match loaded content\n        ResizeInputToFit(inputFields[i].id);\n    }\n}\n\n// Show bulletin menu for each action in list (with copy / delete options)\nfunction ShowBulletinMenu(selectedTask) {\n    let menuDiv = selectedTask.parentElement.lastElementChild;\n    menuDiv.classList.add(\"show\");\n    document.addEventListener(\"click\", e => {\n        if (e.target.tagName != \"I\" || e.target != selectedTask)\n            menuDiv.classList.remove(\"show\");\n    });\n}\n\n///\n// PRINT COMMAND\n///\nfunction PrintCommand(command, id) {\n\n    var commandName = command.action == \"goto\" ? \"go to\" : command.action;\n\n    var returnStr = \"\";\n    returnStr += `\n                <li class=\"task\" id=\"task_${id}\">\n                <div>\n                    <div>\n                        <label for=\"${id}\">\n                            <p>${commandName}</p>\n                        </label>\n                    </div>`;\n\n    // Add input fields for each object variable\n    returnStr += AddInputFields(command, id);\n\n    returnStr += `\n                    <div>\n                    </div>\n                    <div class=\"filler\"></div>\n                    <div class=\"settings\">\n                        <i onclick=\"ShowBulletinMenu(this)\" class=\"uil uil-ellipsis-h\"></i>\n                        <ul class=\"bulletinMenu\">\n                            <li onclick='CopyCommand(${id})'><i class=\"uil uil-trash\"></i>Copy</li>\n                            <li onclick='DeleteCommand(${id})'><i class=\"uil uil-trash\"></i>Delete</li>\n                        </ul>\n                    </div>\n                </div>\n            </li>`;\n\n    return returnStr;\n}\n\n// Add input fields for each command variable\nfunction AddInputFields(command, id, previousKey = null) {\n    var returnStr = \"\";\n    for (const key in command) {\n        var keystr = key;\n        keystr = key.toLocaleLowerCase();\n\n        if (command[key] !== null && typeof command[key] === 'object') {\n            returnStr += \"<span>\" + key + \" {</span>\";\n            returnStr += AddInputFields(command[key], id, key);\n            returnStr += \"<span>}</span>\";\n        }\n\n        else if (keystr != \"action\") {\n            let inputID = \"commandInput_\" + id + \"_\" + (previousKey != null ? previousKey + \"_\" : \"\") + key;\n            //inputIDArray.push(inputID);\n            returnStr += `\n                    <div>\n                    ${keystr}\n                    <input id=\"${inputID}\" value='${command[key]}'/>\n                    </div>\n                        `;\n        }\n\n    }\n    return returnStr;\n}\n\n\nfunction ResizeInputToFit(id) {\n    let _inputField = document.querySelector((\"#\" + id));\n    let width = (40 + (_inputField.value.length * 7.35)) + \"px\";\n    document.querySelector((\"#\" + id)).setAttribute('style', 'width:' + width);\n}\n\nvar lastChar = '';\nvar isNewline = false;\nvar isInsideQuotations = false;\nfunction SetTextareaText(json) {\n    var text = \"\";\n    let count = json.length;\n    var level = 0;\n\n    for (let i = 0; i < count; i++) {\n        let char = json[i];\n\n        switch (char) {\n            case '{': case '[':\n                if (!isInsideQuotations && i != 0 && (json[i - 1] == ',' || json[i - 1] == ':')) text += \"\\n\";\n                if (!isInsideQuotations)\n                    for (let l = 0; l < level; l++)\n                        text += \"\\t\";\n                text += char;\n                if (!isInsideQuotations) {\n                    text += \"\\n\";\n                    level++;\n                    isNewline = true;\n                }\n                break;\n\n            case '}': case ']':\n                if (!isInsideQuotations) {\n                    text += \"\\n\";\n                    level--;\n                    for (let l = 0; l < level; l++)\n                        text += \"\\t\";\n                    isNewline = true;\n                }\n                text += char;\n                break;\n\n            case ',':\n                if (!isInsideQuotations)\n                    isNewline = true;\n                text += char;\n                break;\n\n            case ':':\n                text += char;\n                if (lastChar == \"\\\"\")\n                    text += \" \";\n                break;\n\n            case '\"':\n                isInsideQuotations = !isInsideQuotations;\n\n            default:\n                if (i != 0 && json[i - 1] == ',') { text += \"\\n\"; isNewline = true }\n                if (isNewline)\n                    for (let l = 0; l < level; l++)\n                        text += \"\\t\";\n                text += char;\n                isNewline = false;\n                break;\n        }\n\n        lastChar = char;\n    }\n\n    textarea.value = text;\n}\n\nfunction SetTextareLineNumbers() {\n    /*\n    const lineHeight = 21;\n    var taHeight = textarea.scrollHeight; // Get the scroll height of the textarea\n    const numberOfLines = Math.floor(taHeight/lineHeight);\n    */\n    const numberOfLines = textarea.value.split('\\n').length;\n    lineNumbers.innerHTML = Array(numberOfLines)\n        .fill('<span></span>')\n        .join('');\n}\n\n\n\n\n\n\n\n\n\n\n\n/////////////\n/// #4 : Communication (HTTP Request + Websockets)\n////////////\n\n///\n// HTTP post method (for testing flows using \"nr\"-command)\nasync function SendToNodeRed() {\n    if (commandList.length == 0)\n        return;\n\n    document.getElementById('task_0').classList.add(\"current\");\n\n    fetch('/puprun', {\n\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        body: textarea.value\n\n    }).then(response => {\n        if (response.ok) {\n            response.json().then(json => {\n                console.log(json);\n            });\n        }\n    });\n}\n\n///\n// WEB SOCKET (node-red)\nvar ws;\nvar wsUri = \"ws:\";\nvar loc = window.location; //console.log(loc);\n\nif (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n// This needs to point to the web socket in the Node-RED flow\nwsUri += \"//\" + loc.host + loc.pathname.replace(\"pup\", \"ws/pup\");\n\nfunction wsConnect() {\n    console.log(\"Connecting to \", wsUri);\n    ws = new WebSocket(wsUri);\n    //var line = \"\";    // either uncomment this for a building list of messages\n    ws.onmessage = function (msg) {\n        var line = \"\";  // or uncomment this to overwrite the existing message\n\n        // parse the incoming message as a JSON object\n        var data = msg.data;\n        const obj = JSON.parse(data);\n\n        console.log(\"Received WS message ID: \" + obj.pupid);\n\n        // Remove bg from current command box (and set error if error was detected)\n        document.getElementById('task_' + obj.pupid).classList.remove(\"current\")\n        if (!obj.succesful)\n            document.getElementById('task_' + obj.pupid).classList.add(\"error\")\n\n        // Update next command box bg\n        let nextID = obj.pupid + 1;\n        if (commands.length > nextID)\n            document.getElementById('task_' + nextID).classList.add(\"current\");\n\n        //ws.send(JSON.stringify({data:data}));\n    }\n    ws.onopen = function () {\n        // update the status div with the connection status\n        console.log(\"Connected to WS\");\n    }\n    ws.onclose = function () {\n        // update the status div with the connection status\n        console.log(\"WS connection lost\");\n        // in case of lost connection tries to reconnect every 3 secs\n        setTimeout(wsConnect, 3000);\n    }\n}\nfunction PublishWsMessage(m) {\n    if (ws) { ws.send(m); }\n}\n\n\n\n\n\n\n\n\n\n/////////////\n/// #5 : Command line interface\n////////////\n\nfunction RunCommandLineAction(key) {\n    if (key != \"Enter\")\n        return;\n\n    var input = cmdInput.value;\n    input = input.toLowerCase();\n\n    const inputCommand = (input.split(' '))[0];\n\n    var clearInput = true;\n\n    switch (inputCommand) {\n        case \"clear\":\n            ClearAllCommands();\n            break;\n\n        case \"node-red\": case \"nr\":\n            SendToNodeRed();\n            break;\n\n        default:\n            console.log(\"Received unrecognized console command `\" + input + \"`\");\n            clearInput = false;\n            break;\n    }\n\n    if (clearInput)\n        cmdInput.value = \"\";\n}\n\n/*\nfunction AddCommandLineCommand(ic, i) {\n    const parameters = i.replace(ic, '').trim();\n    AddCommand(ic, parameters);\n\n    console.log(\"Received command `\" + ic + \"` with parameters `\" + parameters + \"`\");\n}\n\n*/\n\n\n\n\n\n\n\n/////////////\n/// #6 : Event listeners\n////////////\n\ntextarea.addEventListener('keyup', event => {\n    SetTextareLineNumbers();\n    StoreAndUpdateJSON(textarea.value);\n});\n\ntextarea.addEventListener('keydown', event => {\n    if (event.key === 'Tab') {\n        const start = textarea.selectionStart;\n        //const end = textarea.selectionEnd;\n\n        textarea.value = textarea.value.substring(0, start) + '\\t' + textarea.value.substring(start, textarea.value.length);\n\n        textarea.selectionEnd = start + 1;\n\n        event.preventDefault();\n    }\n});\n\ncmdInput.addEventListener('keyup', event => {\n    RunCommandLineAction(event.key);\n});\n\n/*\nwindow.onresize = SetTextareLineNumbers;\n*/",
        "x": 630,
        "y": 80,
        "wires": [
            [
                "c8f4a55e7618b7e2"
            ]
        ]
    },
    {
        "id": "a17c13f96787e2b4",
        "type": "template",
        "z": "41d1b8798efe7e15",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n    <meta charset=\"utf-8\">  \n    <title>PupController</title>\n    <style>{{{payload.style}}}</style>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <!-- Iconscout Link For Icons -->\n    <link rel=\"stylesheet\" href=\"https://unicons.iconscout.com/release/v4.0.0/css/line.css\">\n  </head>\n  <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n\n    <div class=\"flex\">\n\n      <div class=\"containerLeft\">\n\n        <div class=\"menu\">\n\n          <div class=\"menupoints\">\n            <div>Documentation</div>\n            <div>GitHub</div>\n          </div>\n\n          <div class=\"controls\"></div>\n\n        </div>\n\n        <ul class=\"commandList\"></ul>\n\n      </div>\n      <div class=\"containerRight\">\n\n        <div class=\"editor\">\n          <div class=\"line-numbers\">\n            <span></span>\n          </div>\n          <textarea class=\"textarea\"></textarea>\n        </div><!-- /editor -->\n\n      </div><!-- /containerRight -->\n    </div><!-- /flex -->\n\n\n\n    <div class=\"commandLine\">\n      <span>></span><input class=\"cmd\" />\n    </div>\n\n\n<script>{{{payload.script}}}</script>\n\n  </body>\n</html>",
        "x": 970,
        "y": 80,
        "wires": [
            [
                "5c5841605bcac134"
            ]
        ]
    },
    {
        "id": "c8f4a55e7618b7e2",
        "type": "template",
        "z": "41d1b8798efe7e15",
        "name": "CSS",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "/* Import Google Font - Poppins */\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');\n*{\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\nfont-family: 'Poppins', sans-serif;\ncolor:rgb(204, 204, 204)\n}\n*:focus\n{\noutline: none;\n}\nbody{\nwidth: 100%;\nheight: 100vh;\noverflow: hidden;\ndisplay: flex;\nalign-content: stretch;\nflex-direction: column;\n}\n.flex\n{\nwidth: 100%;\ndisplay: inline-flex;\nflex-grow: 1;\n}\n.containerLeft\n{\nwidth: 55%;\nbackground: #282b2f;\n/*box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);*/\n}\n.containerRight\n{\nheight: calc(100vh - 30px);\nwidth: 45%;\noverflow-y:auto;\nbackground-color: #1d2025;\nborder-left: 4px solid rgb(29, 31, 29);\n}\n\n/* BOTTOM CMD */\n.commandLine\n{\nline-height: 30px;\ncolor:darkslategray;\nwidth:100%;\nbackground-color: #0b0c0c;\npadding-left: 15px;\n}\n.cmd\n{\nwidth: calc(100% - 30px);\nheight: 100%;\nborder:0px;\nbackground-color: #0b0c0c;\npadding-left: 5px;\nfont-family: monospace;\nfont-size: 15px;\n}\n\n/* RIGHT CONTAINER - TEXT AREA\n.containerRight textarea\n{\nbackground: linear-gradient(135deg, #141618, #191c22);\npadding: 10px 20px;\nwidth:100%;\nheight:100vh;\nborder: 0px;\n} */\n.editor {\ndisplay: inline-flex;\nalign-content: stretch;\nline-height: 21px;\nfont-size: 12px;\nbackground: linear-gradient(135deg, #1a1c20, #1d2025);\nwidth:100%;\n}\n\n.textarea {\noverflow-wrap:break-word;\nwhite-space: pre-wrap;\nline-height: 21px;\n/*overflow-y: hidden;\nbackground: #282a3a;\nheight: 100vh;\ncolor: #FFF;*/\nmin-height: calc(100vh - 30px);\noverflow:hidden;\noutline: none;\nresize: none;\nfont-family: monospace;\nflex-grow: 1;\ncolor:rgb(214, 211, 211);\n\nbackground: linear-gradient(135deg, #141618, #191c22);\npadding: 10px 15px;\nborder: 0px;\n}\n.line-numbers {\npadding: 10px 0px;\nmargin-right: 10px;\nwidth: 35px;\ntext-align: right;\nflex-grow: 0;\n}\n\n.line-numbers span {\ncounter-increment: linenumber;\n}\n\n.line-numbers span::before {\ncontent: counter(linenumber);\ndisplay: block;\ncolor: darkslategray;\nfont-family: monospace;\n}\n\n\n\n\n/* LEFT CONTAINER - VISUAL EDITOR */\n.menu\n{\nbox-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\nbackground: #282b2f;\nbackground: linear-gradient(135deg, rgb(29, 31, 29) 0%, rgb(22, 24, 24) 100%); /* #232626 */\n}\n.menu .menupoints\n{\nfont-size: 12px;\nline-height: 35px;\npadding-left: 12px;\ntext-transform: capitalize;\nbackground: linear-gradient(135deg, rgb(21, 22, 21) 0%, rgb(16, 17, 17) 100%);\n}\n.menupoints div\n{\ndisplay: inline-flex;\npadding: 0px 10px;\n}\n.menupoints div:hover\n{\nbackground: #232626;\ncursor: pointer;\n}\n\n.controls{\npadding: 7px 10px;\npadding-bottom: 14px;\ntext-align: left;\nmax-height: 61px;\noverflow-y: auto;\n}\n.controls div\n{\nfont-size: 12px;\ntext-transform: capitalize;\ncolor:darkslategray;\npadding-left: 3px;\n}\n.controls .button{\nborder: none;\nopacity: 0.4;\noutline: none;\ncolor: #fff;\ncursor: pointer;\nfont-size: 13px;\npadding: 8px 18px;\nmargin-top:4px;\nborder-radius: 3px;\nletter-spacing: 0.3px;\npointer-events: none;\ntransition: transform 0.25s ease;\nbackground: #344b48; /* 343c4b */\ntext-transform: capitalize;\n}\n.controls .button:not(:first-child)\n{\nmargin-left: 3px;\n}\n.button:hover\n{\nbackground: #4d6f6b;\n}\n.button.active{\nopacity: 1;\npointer-events: auto;\n}\n.button:active{\ntransform: scale(0.93);\n}\n\n\n\n\n.commandList\n{\npadding: 10px 8px;\nwidth:100%;\noverflow-y: auto;\nmax-height:calc(100vh - 126px);\nheight: 100%;\noverflow-x: hidden;\n/*background-color: darkslategray;*/\n}\n.commandList span\n{\npadding-left: 7px;\n}\n.commandList.overflow{\noverflow-y: auto;\n}\n*::-webkit-scrollbar{\nwidth: 5px;\n}\n*::-webkit-scrollbar-track{\nbackground: #3f4349;\nborder-radius: 25px;\n}\n*::-webkit-scrollbar-thumb{\nbackground: #6d6d6d;\nborder-radius: 25px;\n}\n\n\n.commandList .task\n{\nlist-style: none;\nfont-size: 15px;\n\nmargin-bottom: 5px;\nborder-radius: 5px;\n\nbox-shadow: 3px 3px 3px rgba(20, 20, 20, 0.05);\nbackground: linear-gradient(135deg, #32363a, #2d3135);\n}\n    .task.current\n    {\n        background: linear-gradient(135deg, #3f2f4f, #4a3859)!important;\n        /*background: linear-gradient(135deg, #99597d, #804b67)!important;*/\n    }\n    .task.error\n    {\n        background: linear-gradient(135deg, #6e4a48, #6b4a46)!important;\n        /*background: linear-gradient(135deg, #9c5c5c, #854e4e)!important;*/\n    }\n.commandList .task > div\n{\npadding-left: 20px;\ndisplay: inline-flex;\nalign-items: flex-start;\nflex-wrap: wrap;\ngap: 15px;\nwidth: 100%;\nmax-width: 100%!important;\npadding-top: 8px;\npadding-bottom: 8px;\nline-height: 25px;\n}\n.task span\n{\ncolor: rgb(136, 136, 136);\nfont-family: monospace;\nline-height: 25px;\nfont-size:12px;\n}\n.task p\n{\n    text-transform: capitalize;\n}\n.commandList .task > div > div\n{\ncolor: rgb(114, 153, 153);\nfont-family: monospace;\n}\n.commandList .task > div input\n{\nbackground-color: #535353;\nborder: 0px;\nborder-radius: 3px;\nline-height: 25px;\npadding: 0px 10px;\nfont-family: monospace;\nwidth: auto;\nmax-width: calc(100vh - 150px);\n}\n\n.commandList .task > div > div.filler\n{\nflex-grow: 1;\nflex-shrink: 1;\n}\n.commandList .settings\n{\nposition: relative;\nfloat: right;\npadding-right:10px;\n/*top: -16px;*/\nflex-grow: 0!important;\n}\n.settings :where(i, li){\ncursor: pointer;\n}\n.settings .bulletinMenu{\nz-index: 10;\nright: 12px;\npadding: 5px 0;\nbackground: #757575;\nposition: absolute;\nborder-radius: 4px;\ntransform: scale(0);\ntransform-origin: top right;\nbox-shadow: 0 0 6px rgba(0,0,0,0.15);\ntransition: transform 0.2s ease;\n}\n.commandList .task:last-child:not(:first-child) .bulletinMenu{\nbottom: 20px;\ntransform-origin: bottom right;\n}\n.commandList .task:not(:last-child) .bulletinMenu{\ntop: 20px;\n}\n/*\n.commandList .task:first-child .bulletinMenu{\nbottom: -65px;\ntransform-origin: top right;\n}*/\n.bulletinMenu.show{\ntransform: scale(1);\n}\n.bulletinMenu li{\nheight: 25px;\nfont-size: 12px;\nline-height: 25px;\nmargin-bottom: 2px;\npadding: 0px 10px;\nmin-width: 85px;\ncursor: pointer; list-style-type: none;\n}\n.bulletinMenu li:last-child{\nmargin-bottom: 0;\n}\n.settings li:hover{\nbackground: rgb(128, 128, 128);\n}\n.settings li i{\npadding-right: 8px;\n}",
        "x": 790,
        "y": 80,
        "wires": [
            [
                "a17c13f96787e2b4"
            ]
        ]
    },
    {
        "id": "fc52fed50ca3f697",
        "type": "aedes broker",
        "z": "8ea344595d9a442a",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 150,
        "y": 340,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a5fbe09299aac9f6",
        "type": "mqtt in",
        "z": "8ea344595d9a442a",
        "name": "MQQT Subscriber",
        "topic": "worklet/control",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a567f42879c1f449",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "35b865b5034d2b0c",
                "becf3086d0307883"
            ]
        ]
    },
    {
        "id": "58b31d3473d4badf",
        "type": "mqtt out",
        "z": "8ea344595d9a442a",
        "name": "MQQT Publisher",
        "topic": "worklet/control",
        "qos": "2",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "a567f42879c1f449",
        "x": 410,
        "y": 100,
        "wires": []
    },
    {
        "id": "a1b4d033b16d8369",
        "type": "inject",
        "z": "8ea344595d9a442a",
        "name": "MQQT START Message",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "start",
        "payloadType": "str",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "58b31d3473d4badf"
            ]
        ]
    },
    {
        "id": "df263263b8209084",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Start MQQT broker",
        "info": "",
        "x": 150,
        "y": 300,
        "wires": []
    },
    {
        "id": "27540cca875b8a81",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Subscribe til worklet/control",
        "info": "",
        "x": 170,
        "y": 180,
        "wires": []
    },
    {
        "id": "9927022caf586464",
        "type": "subflow:52e57c24c4e5e6b5",
        "z": "8ea344595d9a442a",
        "g": "a2ca546c7120f663",
        "name": "",
        "x": 600,
        "y": 200,
        "wires": [
            [
                "6e87ed6cbf1a2272"
            ]
        ]
    },
    {
        "id": "9057a712327815d2",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Kør control kommando",
        "info": "",
        "x": 400,
        "y": 180,
        "wires": []
    },
    {
        "id": "6129b81103d9980c",
        "type": "inject",
        "z": "8ea344595d9a442a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 520,
        "wires": [
            [
                "86720377ed4f4477"
            ]
        ]
    },
    {
        "id": "86720377ed4f4477",
        "type": "change",
        "z": "8ea344595d9a442a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::lastRunStartDate",
                "pt": "global",
                "to": "2022-11-16",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(storeInFile)::lastRunDate",
                "pt": "global",
                "to": "2022-11-17",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "#:(storeInFile)::statusCode",
                "pt": "global",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "#:(storeInFile)::processedReceipts",
                "pt": "global",
                "to": "[]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "ee8cf6c18f13350e",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "TEST SÆT VARIABLER",
        "info": "",
        "x": 170,
        "y": 480,
        "wires": []
    },
    {
        "id": "35b865b5034d2b0c",
        "type": "switch",
        "z": "8ea344595d9a442a",
        "name": "Control switch",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "start",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "9927022caf586464"
            ]
        ]
    },
    {
        "id": "e9617e47af67aef2",
        "type": "debug",
        "z": "8ea344595d9a442a",
        "name": "Control Input Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 460,
        "wires": []
    },
    {
        "id": "c4d293d507b4dfc1",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Kommando: `start`",
        "info": "",
        "x": 630,
        "y": 120,
        "wires": []
    },
    {
        "id": "6e87ed6cbf1a2272",
        "type": "subflow:0a23c0643b4fdb38",
        "z": "8ea344595d9a442a",
        "g": "a2ca546c7120f663",
        "name": "",
        "x": 840,
        "y": 200,
        "wires": [
            [
                "78cdf00662432aa3"
            ]
        ]
    },
    {
        "id": "c0efbe2a4fc25ff6",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Find start- og slutdato",
        "info": "",
        "x": 640,
        "y": 160,
        "wires": []
    },
    {
        "id": "e950456d2d900ca2",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "TEST START MQTT",
        "info": "",
        "x": 150,
        "y": 60,
        "wires": []
    },
    {
        "id": "c5b6cf3e5c34a675",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Download kvitteringer",
        "info": "",
        "x": 860,
        "y": 160,
        "wires": []
    },
    {
        "id": "722a1862e8711423",
        "type": "debug",
        "z": "8ea344595d9a442a",
        "name": "JSON Debug",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 420,
        "wires": []
    },
    {
        "id": "f7835ac1742b0168",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Hent borgerdata",
        "info": "",
        "x": 1060,
        "y": 160,
        "wires": []
    },
    {
        "id": "6c9c15c3a64af0ef",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Transformér data",
        "info": "",
        "x": 1260,
        "y": 160,
        "wires": []
    },
    {
        "id": "0a04261e8f535acc",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Load / KP sager",
        "info": "",
        "x": 1460,
        "y": 160,
        "wires": []
    },
    {
        "id": "39ab3c95c75aefad",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Extract WorkLet + KP",
        "info": "",
        "x": 860,
        "y": 120,
        "wires": []
    },
    {
        "id": "78cdf00662432aa3",
        "type": "subflow:981390739fa10d48",
        "z": "8ea344595d9a442a",
        "g": "a2ca546c7120f663",
        "name": "",
        "x": 1040,
        "y": 200,
        "wires": [
            [
                "27f71b6540b6e2d8"
            ]
        ]
    },
    {
        "id": "7e0f0cecea7dfc8b",
        "type": "change",
        "z": "8ea344595d9a442a",
        "name": "Sæt statusCode = 0",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::statusCode",
                "pt": "global",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1480,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "27f71b6540b6e2d8",
        "type": "subflow:57c40cb841470eb3",
        "z": "8ea344595d9a442a",
        "g": "4689d5530a08a735",
        "name": "",
        "x": 1260,
        "y": 200,
        "wires": [
            [
                "e6a62c075865c065"
            ]
        ]
    },
    {
        "id": "9f0a4de690f4ed8f",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "GAMMEL",
        "info": "",
        "x": 1440,
        "y": 380,
        "wires": []
    },
    {
        "id": "e6a62c075865c065",
        "type": "subflow:3a3b104b02c5ccd9",
        "z": "8ea344595d9a442a",
        "name": "",
        "x": 1430,
        "y": 200,
        "wires": []
    },
    {
        "id": "2ea70729759d488c",
        "type": "catch",
        "z": "8ea344595d9a442a",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1260,
        "y": 60,
        "wires": [
            [
                "df0ed618b5194000"
            ]
        ]
    },
    {
        "id": "df0ed618b5194000",
        "type": "debug",
        "z": "8ea344595d9a442a",
        "name": "ERROR DEBUG",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1470,
        "y": 60,
        "wires": []
    },
    {
        "id": "dbd52891866c7867",
        "type": "http in",
        "z": "8ea344595d9a442a",
        "name": "",
        "url": "/worklet",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 860,
        "wires": [
            [
                "6862e352aded6adf"
            ]
        ]
    },
    {
        "id": "3d5f7ca46f492c8b",
        "type": "template",
        "z": "8ea344595d9a442a",
        "name": "CSS",
        "field": "payload.style",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "body\n{\n    padding-top: 250px;\n    background-color: #49C5B1;\n    margin: 0px;\n}\n\n.ruleWrapper\n{\n    padding-left: 75px;\n    background-color: white;\n    padding-top: 25px;\n    padding-bottom: 25px;\n}",
        "x": 1190,
        "y": 840,
        "wires": [
            [
                "a6987b61fee6301a"
            ]
        ]
    },
    {
        "id": "b78999fe15906d87",
        "type": "template",
        "z": "8ea344595d9a442a",
        "name": "JavaScript",
        "field": "payload.script",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "plain",
        "template": "const ruleWrapper = document.querySelector(\".ruleWrapper\");\n\nconst rules = _rules != null ? _rules : [];\n\n/*\nIS DEFINED IN HTML -> REFERENCE TO payload.inputFields\n\nconst rules = [\n    {\n        \"name\": \"Formuegrænse\",\n        \"variable\": \"\",\n        \"operator\": \"\",\n        \"value\": \"\",\n        \"description\": \"Borgerens formue overstiger formuegrænsen\"\n    }\n];\n*/\nconst operators = [\n    {\n        \"name\": \"equal to\",\n        \"value\": \"==\"\n    },\n    {\n        \"name\": \"not equal to\",\n        \"value\": \"!=\"\n    },\n    {\n        \"name\": \"more than\",\n        \"value\": \">\"\n    },\n    {\n        \"name\": \"more than or equal to\",\n        \"value\": \">=\"\n    },\n    {\n        \"name\": \"less than\",\n        \"value\": \"<\"\n    },\n    {\n        \"name\": \"less than or equal to\",\n        \"value\": \"<=\"\n    }\n]\n\n\nfunction newSelector(selectedValue) {\n    return `\n    `;\n}\n\nfunction newInputField(index) {\n    const obj = rules[index];\n    let returnHTML = `\n        <div>\n        <span>${obj.name}:</span>        \n        <select id=\"input_${index}_operator\">\n        `;\n\n    for (let i = 0; i < operators.length; i++)\n    {\n        let isSelected = obj.operator == operators[i].value;\n        //console.log(\"Checking '\" + obj.operator + \"' against '\" + operators[i].value + \"' = \" + isSelected);\n        returnHTML += `<option value=\"${operators[i].value}\"${isSelected ? \" selected\": \"\"}>${operators[i].name} ( ${operators[i].value} )</option>`;\n    }\n\n    returnHTML += `\n        </select>\n        <input id=\"input_${index}_value\" value=\"${obj.value}\" />\n        </div>\n    `;\n    return returnHTML;\n}\n\n///\n// Instantiate input fields\n\nfor (let i = 0; i < rules.length; i++)\n    ruleWrapper.innerHTML += newInputField(i);\n\n///\n// Dynamically add event listeners \n\nfor (let i = 0; i < rules.length; i++) {\n    document.querySelector(\"#input_\" + i + \"_operator\").addEventListener(\"focusout\", () => {\n        UpdateValue(document.querySelector(\"#input_\" + i + \"_operator\"));\n    });\n\n    document.querySelector(\"#input_\" + i + \"_value\").addEventListener(\"focusout\", () => {\n        UpdateValue(document.querySelector(\"#input_\" + i + \"_value\"));\n    });\n}\n\n///\n// Update input value\nfunction UpdateValue(inputField) {\n\n    let id = inputField.id;\n    let sid = id.split(\"_\");\n\n    (rules[parseInt(sid[1])])[sid[2]] = inputField.value;\n\n    const message = rules;\n    \n    PublishWsMessage(JSON.stringify(message));\n    console.log(message);\n}\n\n\n\n\n///\n// WEB SOCKET (node-red)\nvar ws;\nvar wsUri = \"ws:\";\nvar loc = window.location; //console.log(loc);\n\nif (loc.protocol === \"https:\") { wsUri = \"wss:\"; }\n// This needs to point to the web socket in the Node-RED flow\nwsUri += \"//\" + loc.host + loc.pathname.replace(\"worklet\", \"ws/worklet\");\n\nfunction wsConnect() {\n\n    console.log(\"Connecting to \", wsUri);\n    ws = new WebSocket(wsUri);\n\n    ws.onmessage = function (msg) {\n\n        // parse the incoming message as a JSON object\n        var data = msg.data;\n        const obj = JSON.parse(data);\n\n        console.log(\"Received WS message: \" + JSON.stringify(obj));\n\n        //ws.send(JSON.stringify({data:data}));\n    }\n\n    ws.onopen = function () {\n        // update the status div with the connection status\n        console.log(\"Connected to WS\");\n    }\n\n    ws.onclose = function () {\n        // update the status div with the connection status\n        console.log(\"WS connection lost\");\n        // in case of lost connection tries to reconnect every 3 secs\n        setTimeout(wsConnect, 3000);\n    }\n}\nfunction PublishWsMessage(m) {\n    if (ws) { ws.send(m); }\n}",
        "x": 990,
        "y": 840,
        "wires": [
            [
                "3d5f7ca46f492c8b"
            ]
        ]
    },
    {
        "id": "78a498d6a82a151b",
        "type": "http response",
        "z": "8ea344595d9a442a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1550,
        "y": 840,
        "wires": []
    },
    {
        "id": "a6987b61fee6301a",
        "type": "template",
        "z": "8ea344595d9a442a",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\" dir=\"ltr\">\n  <head>\n    <meta charset=\"utf-8\">  \n    <title>PupController</title>\n    <style>{{{payload.style}}}</style>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <!-- Iconscout Link For Icons -->\n    <link rel=\"stylesheet\" href=\"https://unicons.iconscout.com/release/v4.0.0/css/line.css\">\n  </head>\n  <body onload=\"wsConnect();\" onunload=\"ws.disconnect();\">\n\n    <div class=\"ruleWrapper\">\n    </div>\n\n    <script>\n      const _rules = {{{payload.inputFields}}}\n    </script>\n    <script>\n      {{{payload.script}}}\n    </script>\n\n  </body>\n</html>",
        "x": 1370,
        "y": 840,
        "wires": [
            [
                "78a498d6a82a151b"
            ]
        ]
    },
    {
        "id": "b0e7c0223f35204b",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Set input fields",
        "info": "",
        "x": 400,
        "y": 800,
        "wires": []
    },
    {
        "id": "4d5e9b7651bc2abe",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Host website",
        "info": "",
        "x": 150,
        "y": 820,
        "wires": []
    },
    {
        "id": "e61b9e68a1a9e687",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Set content",
        "info": "",
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "edb26b05b85df72e",
        "type": "comment",
        "z": "8ea344595d9a442a",
        "name": "Endpoint",
        "info": "",
        "x": 1560,
        "y": 800,
        "wires": []
    },
    {
        "id": "3460ad3d4bc402dd",
        "type": "change",
        "z": "8ea344595d9a442a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.inputFields",
                "pt": "msg",
                "to": "[\t    {\t        \"name\": \"Formuegrænse\",\t        \"variable\": \"formuegraense\",\t        \"operator\": \"\",\t        \"value\": \"\",\t        \"description\": \"Borgerens formue overstiger formuegrænsen\"\t    },\t    {\t        \"name\": \"Testværdi 2\",\t        \"variable\": \"test2\",\t        \"operator\": \"\",\t        \"value\": \"\",\t        \"description\": \"Ingen yderligere beskrivelse\"\t    },\t    {\t        \"name\": \"Testværdi 3\",\t        \"variable\": \"test3\",\t        \"operator\": \"\",\t        \"value\": \"\",\t        \"description\": \"Ingen yderligere beskrivelse\"\t    }\t]",
                "tot": "jsonata"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 880,
        "wires": [
            [
                "576df08c4fd1853c"
            ]
        ]
    },
    {
        "id": "9ee6e743efbedf9f",
        "type": "websocket in",
        "z": "8ea344595d9a442a",
        "name": "",
        "server": "43ca9917319c367b",
        "client": "",
        "x": 160,
        "y": 1060,
        "wires": [
            [
                "54ebf542897cb37d"
            ]
        ]
    },
    {
        "id": "9193e4e8badda861",
        "type": "websocket out",
        "z": "8ea344595d9a442a",
        "name": "",
        "server": "43ca9917319c367b",
        "client": "",
        "x": 1060,
        "y": 1060,
        "wires": []
    },
    {
        "id": "576df08c4fd1853c",
        "type": "json",
        "z": "8ea344595d9a442a",
        "name": "",
        "property": "payload.inputFields",
        "action": "str",
        "pretty": false,
        "x": 810,
        "y": 840,
        "wires": [
            [
                "b78999fe15906d87"
            ]
        ]
    },
    {
        "id": "6862e352aded6adf",
        "type": "switch",
        "z": "8ea344595d9a442a",
        "name": "",
        "property": "#:(storeInFile)::rules",
        "propertyType": "global",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "empty"
            },
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 860,
        "wires": [
            [
                "5dc5bfc86dfa161e"
            ],
            [
                "3460ad3d4bc402dd"
            ],
            [
                "3460ad3d4bc402dd"
            ]
        ]
    },
    {
        "id": "5dc5bfc86dfa161e",
        "type": "change",
        "z": "8ea344595d9a442a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload.inputFields",
                "pt": "msg",
                "to": "#:(storeInFile)::rules",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 840,
        "wires": [
            [
                "576df08c4fd1853c"
            ]
        ]
    },
    {
        "id": "54ebf542897cb37d",
        "type": "json",
        "z": "8ea344595d9a442a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 350,
        "y": 1060,
        "wires": [
            [
                "a7100eb3aada3d3c"
            ]
        ]
    },
    {
        "id": "a7100eb3aada3d3c",
        "type": "change",
        "z": "8ea344595d9a442a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "#:(storeInFile)::rules",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 540,
        "y": 1060,
        "wires": [
            [
                "68f7f88bbaaedb3a"
            ]
        ]
    },
    {
        "id": "68f7f88bbaaedb3a",
        "type": "debug",
        "z": "8ea344595d9a442a",
        "name": "Rules updated",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1060,
        "wires": []
    }
]